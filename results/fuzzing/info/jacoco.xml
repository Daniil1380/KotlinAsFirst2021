<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd"><report name="kfirst"><sessioninfo id="DESKTOP-789DVBO-7031323b" start="1648565474992" dump="1648565491768"/><package name="lesson10/task1"><class name="lesson10/task1/Parser" sourcefilename="Regex.kt"><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="92"><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parse" desc="()Llesson10/task1/Expression;" line="96"><counter type="INSTRUCTION" missed="19" covered="20"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseExpression" desc="()Llesson10/task1/Expression;" line="102"><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseItem" desc="()Llesson10/task1/Expression;" line="117"><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseFactor" desc="()Llesson10/task1/Expression;" line="132"><counter type="INSTRUCTION" missed="17" covered="80"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseExponentiation$kfirst" desc="()Llesson10/task1/Expression;" line="155"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="46" covered="258"/><counter type="BRANCH" missed="5" covered="21"/><counter type="LINE" missed="2" covered="29"/><counter type="COMPLEXITY" missed="6" covered="14"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="lesson10/task1/Expression$Negate" sourcefilename="Regex.kt"><method name="&lt;init&gt;" desc="(Llesson10/task1/Expression;)V" line="66"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getArg" desc="()Llesson10/task1/Expression;" line="66"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="lesson10/task1/Expression$Constant" sourcefilename="Regex.kt"><method name="&lt;init&gt;" desc="(I)V" line="54"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValue" desc="()I" line="54"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="lesson10/task1/Expression" sourcefilename="Regex.kt"><method name="calculate" desc="(I)I" line="68"><counter type="INSTRUCTION" missed="0" covered="97"/><counter type="BRANCH" missed="0" covered="11"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="97"/><counter type="BRANCH" missed="0" covered="11"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="lesson10/task1/Expression$Variable" sourcefilename="Regex.kt"><method name="&lt;init&gt;" desc="()V" line="52"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="lesson10/task1/Expression$Binary" sourcefilename="Regex.kt"><method name="&lt;init&gt;" desc="(Llesson10/task1/Expression;Llesson10/task1/Expression$Operation;Llesson10/task1/Expression;)V" line="64"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLeft" desc="()Llesson10/task1/Expression;" line="64"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOp" desc="()Llesson10/task1/Expression$Operation;" line="64"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRight" desc="()Llesson10/task1/Expression;" line="64"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="lesson10/task1/RegexKt" sourcefilename="Regex.kt"><method name="parseExpr" desc="(Ljava/lang/String;Ljava/util/List;)Ljava/util/Map;" line="30"><counter type="INSTRUCTION" missed="4" covered="60"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseExpr" desc="(Ljava/lang/String;)Llesson10/task1/Expression;" line="39"><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="103"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="lesson10/task1/Expression$Operation" sourcefilename="Regex.kt"><method name="&lt;clinit&gt;" desc="()V" line="57"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Regex.kt"><line nr="30" mi="4" ci="16" mb="1" cb="1"/><line nr="31" mi="0" ci="7" mb="0" cb="0"/><line nr="32" mi="0" ci="11" mb="0" cb="2"/><line nr="33" mi="0" ci="18" mb="0" cb="0"/><line nr="35" mi="0" ci="2" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="5" mb="0" cb="0"/><line nr="41" mi="0" ci="7" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="2"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="5" mb="0" cb="2"/><line nr="45" mi="0" ci="8" mb="0" cb="0"/><line nr="48" mi="0" ci="6" mb="0" cb="0"/><line nr="52" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="10" mb="0" cb="0"/><line nr="57" mi="0" ci="6" mb="0" cb="0"/><line nr="58" mi="0" ci="6" mb="0" cb="0"/><line nr="59" mi="0" ci="6" mb="0" cb="0"/><line nr="60" mi="0" ci="6" mb="0" cb="0"/><line nr="61" mi="0" ci="9" mb="0" cb="0"/><line nr="64" mi="0" ci="22" mb="0" cb="0"/><line nr="66" mi="0" ci="10" mb="0" cb="0"/><line nr="68" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="0" ci="6" mb="0" cb="2"/><line nr="70" mi="0" ci="7" mb="0" cb="2"/><line nr="71" mi="0" ci="14" mb="0" cb="7"/><line nr="73" mi="0" ci="12" mb="0" cb="0"/><line nr="76" mi="0" ci="12" mb="0" cb="0"/><line nr="79" mi="0" ci="12" mb="0" cb="0"/><line nr="82" mi="0" ci="12" mb="0" cb="0"/><line nr="85" mi="0" ci="10" mb="0" cb="0"/><line nr="88" mi="0" ci="9" mb="0" cb="0"/><line nr="89" mi="0" ci="1" mb="0" cb="0"/><line nr="92" mi="0" ci="6" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="19" ci="15" mb="2" cb="2"/><line nr="98" mi="0" ci="2" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="0" ci="6" mb="0" cb="2"/><line nr="104" mi="0" ci="21" mb="0" cb="4"/><line nr="106" mi="0" ci="10" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="9" mb="0" cb="0"/><line nr="110" mi="0" ci="2" mb="0" cb="0"/><line nr="113" mi="0" ci="2" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="0" cb="0"/><line nr="118" mi="0" ci="6" mb="0" cb="2"/><line nr="119" mi="0" ci="21" mb="0" cb="4"/><line nr="121" mi="0" ci="10" mb="0" cb="0"/><line nr="122" mi="0" ci="3" mb="0" cb="0"/><line nr="123" mi="0" ci="9" mb="0" cb="0"/><line nr="125" mi="0" ci="2" mb="0" cb="0"/><line nr="128" mi="0" ci="2" mb="0" cb="0"/><line nr="132" mi="10" ci="15" mb="2" cb="2"/><line nr="133" mi="0" ci="20" mb="0" cb="4"/><line nr="134" mi="0" ci="3" mb="0" cb="0"/><line nr="135" mi="0" ci="7" mb="0" cb="0"/><line nr="137" mi="0" ci="3" mb="0" cb="0"/><line nr="138" mi="0" ci="16" mb="0" cb="0"/><line nr="139" mi="0" ci="6" mb="1" cb="1"/><line nr="140" mi="7" ci="0" mb="0" cb="0"/><line nr="142" mi="0" ci="10" mb="0" cb="0"/><line nr="155" mi="10" ci="0" mb="0" cb="0"/><line nr="158" mi="0" ci="37" mb="0" cb="0"/><counter type="INSTRUCTION" missed="50" covered="549"/><counter type="BRANCH" missed="6" covered="39"/><counter type="LINE" missed="2" covered="62"/><counter type="COMPLEXITY" missed="7" covered="37"/><counter type="METHOD" missed="1" covered="18"/><counter type="CLASS" missed="0" covered="8"/></sourcefile><counter type="INSTRUCTION" missed="50" covered="549"/><counter type="BRANCH" missed="6" covered="39"/><counter type="LINE" missed="2" covered="62"/><counter type="COMPLEXITY" missed="7" covered="37"/><counter type="METHOD" missed="1" covered="18"/><counter type="CLASS" missed="0" covered="8"/></package><package name="lesson10/task2"><class name="lesson10/task2/HtmlKt$generateListHtml$1" sourcefilename="Html.kt"><method name="invoke" desc="(Llesson10/task2/HTML;)V" line="88"><counter type="INSTRUCTION" missed="6" covered="3"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="3"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="lesson10/task2/HtmlKt" sourcefilename="Html.kt"><method name="convertToHtmlTable" desc="(Ljava/util/List;)Ljava/lang/String;" line="12"><counter type="INSTRUCTION" missed="0" covered="81"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertToHtmlTableUsingKotlinxHtml" desc="(Ljava/util/List;)Ljava/lang/String;" line="36"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="generateSimpleHtml" desc="(Ljava/lang/String;)Ljava/lang/String;" line="58"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="generateListHtml" desc="(Ljava/util/List;)Ljava/lang/String;" line="86"><counter type="INSTRUCTION" missed="13" covered="7"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="myHtml" desc="(Ljava/lang/StringBuilder;Lkotlin/jvm/functions/Function1;)Llesson10/task2/HTML;" line="129"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="13" covered="164"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="2" covered="28"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="lesson10/task2/HtmlKt$convertToHtmlTableUsingKotlinxHtml$1$1$1$1" sourcefilename="Html.kt"><method name="invoke" desc="(Lkotlinx/html/TR;)V" line="43"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="lesson10/task2/HtmlKt$generateSimpleHtml$1" sourcefilename="Html.kt"><method name="invoke" desc="(Llesson10/task2/HTML;)V" line="60"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="lesson10/task2/HtmlKt$generateSimpleHtml$1$1" sourcefilename="Html.kt"><method name="invoke" desc="(Llesson10/task2/HTMLBody;)V" line="61"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="lesson10/task2/HtmlKt$convertToHtmlTableUsingKotlinxHtml$1$1$1" sourcefilename="Html.kt"><method name="invoke" desc="(Lkotlinx/html/TABLE;)V" line="41"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="lesson10/task2/HtmlKt$convertToHtmlTableUsingKotlinxHtml$1$1$1$1$1" sourcefilename="Html.kt"><method name="invoke" desc="(Lkotlinx/html/TD;)V" line="44"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="lesson10/task2/HtmlKt$generateListHtml$1$1$1" sourcefilename="Html.kt"><method name="invoke" desc="(Llesson10/task2/HTMLList;)V" line="90"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="lesson10/task2/HtmlKt$convertToHtmlTableUsingKotlinxHtml$1$1" sourcefilename="Html.kt"><method name="invoke" desc="(Lkotlinx/html/BODY;)V" line="40"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="lesson10/task2/HTMLItem" sourcefilename="Html.kt"><method name="&lt;init&gt;" desc="(Ljava/lang/StringBuilder;)V" line="123"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSb" desc="()Ljava/lang/StringBuilder;" line="123"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="unaryPlus" desc="(Ljava/lang/String;)V" line="125"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="lesson10/task2/HTML" sourcefilename="Html.kt"><method name="&lt;init&gt;" desc="(Ljava/lang/StringBuilder;)V" line="97"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSb" desc="()Ljava/lang/StringBuilder;" line="97"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="myBody" desc="(Lkotlin/jvm/functions/Function1;)Llesson10/task2/HTMLBody;" line="99"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="34"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="lesson10/task2/HtmlKt$generateListHtml$1$1" sourcefilename="Html.kt"><method name="invoke" desc="(Llesson10/task2/HTMLBody;)V" line="89"><counter type="INSTRUCTION" missed="6" covered="3"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="3"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="lesson10/task2/HtmlKt$convertToHtmlTableUsingKotlinxHtml$1" sourcefilename="Html.kt"><method name="invoke" desc="(Lkotlinx/html/HTML;)V" line="39"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="lesson10/task2/HTMLBody" sourcefilename="Html.kt"><method name="&lt;init&gt;" desc="(Ljava/lang/StringBuilder;)V" line="107"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSb" desc="()Ljava/lang/StringBuilder;" line="107"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="unaryPlus" desc="(Ljava/lang/String;)V" line="109"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="myList" desc="(Lkotlin/jvm/functions/Function1;)Llesson10/task2/HTMLList;" line="113"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="31"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="lesson10/task2/HTMLList" sourcefilename="Html.kt"><method name="&lt;init&gt;" desc="(Ljava/lang/StringBuilder;)V" line="117"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSb" desc="()Ljava/lang/StringBuilder;" line="117"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="myItem" desc="(Lkotlin/jvm/functions/Function1;)Llesson10/task2/HTMLItem;" line="119"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="Html.kt"><line nr="12" mi="0" ci="4" mb="0" cb="0"/><line nr="13" mi="0" ci="4" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="4" mb="0" cb="0"/><line nr="16" mi="0" ci="10" mb="0" cb="2"/><line nr="17" mi="0" ci="4" mb="0" cb="0"/><line nr="18" mi="0" ci="10" mb="0" cb="2"/><line nr="19" mi="0" ci="4" mb="0" cb="0"/><line nr="20" mi="0" ci="4" mb="0" cb="0"/><line nr="21" mi="0" ci="5" mb="0" cb="0"/><line nr="23" mi="0" ci="5" mb="0" cb="0"/><line nr="25" mi="0" ci="4" mb="0" cb="0"/><line nr="26" mi="0" ci="4" mb="0" cb="0"/><line nr="27" mi="0" ci="4" mb="0" cb="0"/><line nr="28" mi="0" ci="8" mb="0" cb="0"/><line nr="36" mi="0" ci="2" mb="0" cb="0"/><line nr="37" mi="0" ci="4" mb="0" cb="0"/><line nr="38" mi="0" ci="17" mb="0" cb="0"/><line nr="39" mi="0" ci="11" mb="0" cb="0"/><line nr="40" mi="0" ci="12" mb="0" cb="0"/><line nr="41" mi="0" ci="11" mb="0" cb="2"/><line nr="42" mi="0" ci="11" mb="0" cb="0"/><line nr="43" mi="0" ci="11" mb="0" cb="2"/><line nr="44" mi="0" ci="16" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="8" mb="0" cb="0"/><line nr="58" mi="0" ci="4" mb="0" cb="0"/><line nr="59" mi="0" ci="8" mb="0" cb="0"/><line nr="60" mi="0" ci="9" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="8" mb="0" cb="0"/><line nr="86" mi="0" ci="4" mb="0" cb="0"/><line nr="87" mi="5" ci="0" mb="0" cb="0"/><line nr="88" mi="5" ci="0" mb="0" cb="0"/><line nr="89" mi="5" ci="0" mb="0" cb="0"/><line nr="90" mi="10" ci="0" mb="0" cb="0"/><line nr="92" mi="1" ci="0" mb="0" cb="0"/><line nr="93" mi="1" ci="0" mb="0" cb="0"/><line nr="94" mi="8" ci="0" mb="0" cb="0"/><line nr="97" mi="3" ci="6" mb="0" cb="0"/><line nr="99" mi="0" ci="6" mb="0" cb="0"/><line nr="100" mi="0" ci="5" mb="0" cb="0"/><line nr="101" mi="0" ci="4" mb="0" cb="0"/><line nr="102" mi="0" ci="5" mb="0" cb="0"/><line nr="103" mi="0" ci="2" mb="0" cb="0"/><line nr="107" mi="3" ci="6" mb="0" cb="0"/><line nr="109" mi="0" ci="5" mb="0" cb="0"/><line nr="110" mi="0" ci="1" mb="0" cb="0"/><line nr="113" mi="0" ci="10" mb="0" cb="0"/><line nr="117" mi="9" ci="0" mb="0" cb="0"/><line nr="119" mi="10" ci="0" mb="0" cb="0"/><line nr="123" mi="9" ci="0" mb="0" cb="0"/><line nr="125" mi="1" ci="0" mb="0" cb="0"/><line nr="129" mi="0" ci="5" mb="0" cb="0"/><line nr="130" mi="0" ci="4" mb="0" cb="0"/><line nr="131" mi="0" ci="4" mb="0" cb="0"/><line nr="132" mi="0" ci="4" mb="0" cb="0"/><line nr="133" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="85" covered="347"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="11" covered="52"/><counter type="COMPLEXITY" missed="9" covered="23"/><counter type="METHOD" missed="9" covered="19"/><counter type="CLASS" missed="3" covered="12"/></sourcefile><counter type="INSTRUCTION" missed="85" covered="347"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="11" covered="52"/><counter type="COMPLEXITY" missed="9" covered="23"/><counter type="METHOD" missed="9" covered="19"/><counter type="CLASS" missed="3" covered="12"/></package><package name="lesson6/task1"><class name="lesson6/task1/ParseKt" sourcefilename="Parse.kt"><method name="timeStrToSeconds" desc="(Ljava/lang/String;)I" line="19"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="twoDigitStr" desc="(I)Ljava/lang/String;" line="34"><counter type="INSTRUCTION" missed="1" covered="19"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="timeSecondsToStr" desc="(I)Ljava/lang/String;" line="43"><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="main" desc="()V" line="53"><counter type="INSTRUCTION" missed="53" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="dateStrToDigit" desc="(Ljava/lang/String;)Ljava/lang/String;" line="79"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dateDigitToStr" desc="(Ljava/lang/String;)Ljava/lang/String;" line="91"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="flattenPhoneNumber" desc="(Ljava/lang/String;)Ljava/lang/String;" line="107"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="bestLongJump" desc="(Ljava/lang/String;)I" line="120"><counter type="INSTRUCTION" missed="0" covered="72"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="bestHighJump" desc="(Ljava/lang/String;)I" line="145"><counter type="INSTRUCTION" missed="0" covered="103"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="plusMinus" desc="(Ljava/lang/String;)I" line="168"><counter type="INSTRUCTION" missed="3" covered="123"/><counter type="BRANCH" missed="5" covered="11"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="4" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="firstDuplicateIndex" desc="(Ljava/lang/String;)I" line="188"><counter type="INSTRUCTION" missed="0" covered="64"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mostExpensive" desc="(Ljava/lang/String;)Ljava/lang/String;" line="209"><counter type="INSTRUCTION" missed="7" covered="141"/><counter type="BRANCH" missed="7" covered="11"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="5" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromRoman" desc="(Ljava/lang/String;)I" line="233"><counter type="INSTRUCTION" missed="5" covered="209"/><counter type="BRANCH" missed="3" covered="53"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="3" covered="26"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeDeviceCells" desc="(ILjava/lang/String;I)Ljava/util/List;" line="296"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="69" covered="880"/><counter type="BRANCH" missed="23" covered="109"/><counter type="LINE" missed="10" covered="76"/><counter type="COMPLEXITY" missed="19" covered="61"/><counter type="METHOD" missed="1" covered="13"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Parse.kt"><line nr="19" mi="0" ci="16" mb="0" cb="0"/><line nr="20" mi="0" ci="2" mb="0" cb="0"/><line nr="21" mi="0" ci="10" mb="0" cb="2"/><line nr="22" mi="0" ci="7" mb="0" cb="0"/><line nr="23" mi="0" ci="7" mb="0" cb="0"/><line nr="25" mi="0" ci="2" mb="0" cb="0"/><line nr="34" mi="1" ci="19" mb="1" cb="5"/><line nr="43" mi="0" ci="4" mb="0" cb="0"/><line nr="44" mi="0" ci="6" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="36" mb="0" cb="0"/><line nr="53" mi="7" ci="0" mb="0" cb="0"/><line nr="54" mi="2" ci="0" mb="0" cb="0"/><line nr="55" mi="2" ci="0" mb="2" cb="0"/><line nr="56" mi="3" ci="0" mb="0" cb="0"/><line nr="57" mi="3" ci="0" mb="2" cb="0"/><line nr="58" mi="17" ci="0" mb="0" cb="0"/><line nr="60" mi="11" ci="0" mb="0" cb="0"/><line nr="63" mi="7" ci="0" mb="0" cb="0"/><line nr="65" mi="1" ci="0" mb="0" cb="0"/><line nr="79" mi="0" ci="10" mb="0" cb="0"/><line nr="91" mi="0" ci="10" mb="0" cb="0"/><line nr="107" mi="0" ci="10" mb="0" cb="0"/><line nr="120" mi="0" ci="18" mb="0" cb="0"/><line nr="121" mi="0" ci="2" mb="0" cb="0"/><line nr="122" mi="0" ci="8" mb="0" cb="2"/><line nr="123" mi="0" ci="8" mb="0" cb="2"/><line nr="124" mi="0" ci="5" mb="0" cb="2"/><line nr="125" mi="0" ci="10" mb="0" cb="2"/><line nr="126" mi="0" ci="10" mb="0" cb="2"/><line nr="127" mi="0" ci="3" mb="0" cb="2"/><line nr="128" mi="0" ci="3" mb="0" cb="0"/><line nr="130" mi="0" ci="2" mb="0" cb="0"/><line nr="145" mi="0" ci="2" mb="0" cb="0"/><line nr="146" mi="0" ci="16" mb="0" cb="2"/><line nr="147" mi="0" ci="16" mb="0" cb="0"/><line nr="148" mi="0" ci="14" mb="1" cb="3"/><line nr="149" mi="0" ci="16" mb="0" cb="2"/><line nr="150" mi="0" ci="13" mb="0" cb="2"/><line nr="152" mi="0" ci="21" mb="1" cb="1"/><line nr="154" mi="0" ci="2" mb="0" cb="0"/><line nr="168" mi="0" ci="18" mb="0" cb="2"/><line nr="169" mi="0" ci="16" mb="0" cb="0"/><line nr="170" mi="0" ci="10" mb="0" cb="0"/><line nr="171" mi="3" ci="33" mb="4" cb="6"/><line nr="172" mi="0" ci="21" mb="0" cb="2"/><line nr="173" mi="0" ci="20" mb="1" cb="1"/><line nr="175" mi="0" ci="2" mb="0" cb="0"/><line nr="188" mi="0" ci="16" mb="0" cb="0"/><line nr="189" mi="0" ci="2" mb="0" cb="0"/><line nr="190" mi="0" ci="16" mb="1" cb="3"/><line nr="191" mi="0" ci="15" mb="0" cb="2"/><line nr="192" mi="0" ci="10" mb="0" cb="0"/><line nr="194" mi="0" ci="2" mb="0" cb="0"/><line nr="209" mi="0" ci="14" mb="0" cb="2"/><line nr="210" mi="0" ci="2" mb="0" cb="0"/><line nr="211" mi="0" ci="13" mb="0" cb="0"/><line nr="212" mi="0" ci="29" mb="0" cb="4"/><line nr="213" mi="5" ci="31" mb="6" cb="4"/><line nr="214" mi="0" ci="10" mb="0" cb="0"/><line nr="215" mi="0" ci="23" mb="1" cb="1"/><line nr="216" mi="2" ci="0" mb="0" cb="0"/><line nr="218" mi="0" ci="16" mb="0" cb="0"/><line nr="233" mi="0" ci="16" mb="0" cb="2"/><line nr="234" mi="0" ci="2" mb="0" cb="0"/><line nr="235" mi="0" ci="18" mb="0" cb="0"/><line nr="236" mi="0" ci="16" mb="1" cb="3"/><line nr="237" mi="0" ci="5" mb="0" cb="0"/><line nr="238" mi="0" ci="7" mb="0" cb="0"/><line nr="239" mi="0" ci="7" mb="0" cb="0"/><line nr="240" mi="0" ci="1" mb="0" cb="0"/><line nr="241" mi="0" ci="13" mb="0" cb="4"/><line nr="242" mi="0" ci="13" mb="1" cb="3"/><line nr="243" mi="0" ci="13" mb="0" cb="4"/><line nr="244" mi="5" ci="8" mb="1" cb="3"/><line nr="245" mi="0" ci="10" mb="0" cb="4"/><line nr="246" mi="0" ci="10" mb="0" cb="4"/><line nr="247" mi="0" ci="10" mb="0" cb="4"/><line nr="248" mi="0" ci="10" mb="0" cb="4"/><line nr="249" mi="0" ci="10" mb="0" cb="4"/><line nr="250" mi="0" ci="10" mb="0" cb="4"/><line nr="251" mi="0" ci="10" mb="0" cb="4"/><line nr="252" mi="0" ci="10" mb="0" cb="4"/><line nr="253" mi="0" ci="5" mb="0" cb="2"/><line nr="256" mi="0" ci="2" mb="0" cb="0"/><line nr="296" mi="0" ci="10" mb="0" cb="0"/><counter type="INSTRUCTION" missed="69" covered="880"/><counter type="BRANCH" missed="23" covered="109"/><counter type="LINE" missed="10" covered="76"/><counter type="COMPLEXITY" missed="19" covered="61"/><counter type="METHOD" missed="1" covered="13"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="69" covered="880"/><counter type="BRANCH" missed="23" covered="109"/><counter type="LINE" missed="10" covered="76"/><counter type="COMPLEXITY" missed="19" covered="61"/><counter type="METHOD" missed="1" covered="13"/><counter type="CLASS" missed="0" covered="1"/></package><package name="lesson7/task1"><class name="lesson7/task1/FilesKt" sourcefilename="Files.kt"><method name="alignFile" desc="(Ljava/lang/String;ILjava/lang/String;)V" line="25"><counter type="INSTRUCTION" missed="3" covered="129"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="deleteMarked" desc="(Ljava/lang/String;Ljava/lang/String;)V" line="66"><counter type="INSTRUCTION" missed="3" covered="97"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="countInLine" desc="(Ljava/lang/String;Ljava/lang/String;I)I" line="79"><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="countSubstrings" desc="(Ljava/lang/String;Ljava/util/List;)Ljava/util/Map;" line="96"><counter type="INSTRUCTION" missed="0" covered="89"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sibilants" desc="(Ljava/lang/String;Ljava/lang/String;)V" line="125"><counter type="INSTRUCTION" missed="3" covered="227"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="centerFile" desc="(Ljava/lang/String;Ljava/lang/String;)V" line="158"><counter type="INSTRUCTION" missed="6" covered="163"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="alignFileByWidth" desc="(Ljava/lang/String;Ljava/lang/String;)V" line="199"><counter type="INSTRUCTION" missed="6" covered="400"/><counter type="BRANCH" missed="2" covered="26"/><counter type="LINE" missed="0" covered="31"/><counter type="COMPLEXITY" missed="2" covered="13"/><counter type="METHOD" missed="0" covered="1"/></method><method name="top20Words" desc="(Ljava/lang/String;)Ljava/util/Map;" line="260"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="transliterate" desc="(Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;)V" line="298"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="chooseLongestChaoticWord" desc="(Ljava/lang/String;Ljava/lang/String;)V" line="326"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="markdownToHtmlSimple" desc="(Ljava/lang/String;Ljava/lang/String;)V" line="375"><counter type="INSTRUCTION" missed="14" covered="408"/><counter type="BRANCH" missed="15" covered="79"/><counter type="LINE" missed="2" covered="48"/><counter type="COMPLEXITY" missed="13" covered="35"/><counter type="METHOD" missed="0" covered="1"/></method><method name="markdownToHtmlLists" desc="(Ljava/lang/String;Ljava/lang/String;)V" line="554"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="markdownToHtml" desc="(Ljava/lang/String;Ljava/lang/String;)V" line="566"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="printMultiplicationProcess" desc="(IILjava/lang/String;)V" line="595"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="printDivisionProcess" desc="(IILjava/lang/String;)V" line="620"><counter type="INSTRUCTION" missed="24" covered="391"/><counter type="BRANCH" missed="2" covered="18"/><counter type="LINE" missed="2" covered="46"/><counter type="COMPLEXITY" missed="2" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="alignFile$append" desc="(Lkotlin/jvm/internal/Ref$IntRef;ILjava/io/BufferedWriter;Ljava/lang/String;)V" line="28"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="59" covered="2081"/><counter type="BRANCH" missed="26" covered="168"/><counter type="LINE" missed="4" covered="197"/><counter type="COMPLEXITY" missed="24" covered="89"/><counter type="METHOD" missed="0" covered="16"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Files.kt"><line nr="25" mi="3" ci="45" mb="1" cb="1"/><line nr="26" mi="0" ci="4" mb="0" cb="0"/><line nr="28" mi="0" ci="3" mb="0" cb="2"/><line nr="29" mi="0" ci="7" mb="0" cb="2"/><line nr="30" mi="0" ci="2" mb="0" cb="0"/><line nr="31" mi="0" ci="4" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="8" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="7" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="40" mi="0" ci="17" mb="0" cb="2"/><line nr="41" mi="0" ci="12" mb="0" cb="4"/><line nr="42" mi="0" ci="2" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="1" cb="1"/><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="25" mb="0" cb="2"/><line nr="50" mi="0" ci="6" mb="0" cb="0"/><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="3" ci="45" mb="1" cb="1"/><line nr="67" mi="0" ci="17" mb="0" cb="2"/><line nr="68" mi="0" ci="15" mb="0" cb="4"/><line nr="69" mi="0" ci="5" mb="0" cb="2"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="1" mb="0" cb="0"/><line nr="79" mi="0" ci="12" mb="0" cb="2"/><line nr="81" mi="0" ci="4" mb="0" cb="0"/><line nr="82" mi="0" ci="24" mb="0" cb="0"/><line nr="96" mi="0" ci="7" mb="0" cb="0"/><line nr="97" mi="0" ci="2" mb="0" cb="0"/><line nr="98" mi="0" ci="10" mb="0" cb="2"/><line nr="99" mi="0" ci="17" mb="0" cb="2"/><line nr="100" mi="0" ci="11" mb="0" cb="0"/><line nr="101" mi="0" ci="11" mb="0" cb="0"/><line nr="102" mi="0" ci="8" mb="0" cb="0"/><line nr="104" mi="0" ci="12" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="2" mb="0" cb="0"/><line nr="125" mi="0" ci="46" mb="0" cb="0"/><line nr="126" mi="0" ci="54" mb="0" cb="0"/><line nr="127" mi="3" ci="45" mb="1" cb="1"/><line nr="128" mi="0" ci="17" mb="0" cb="2"/><line nr="129" mi="0" ci="6" mb="0" cb="0"/><line nr="130" mi="0" ci="14" mb="1" cb="3"/><line nr="131" mi="0" ci="17" mb="0" cb="4"/><line nr="132" mi="0" ci="10" mb="0" cb="0"/><line nr="133" mi="0" ci="6" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="0" cb="0"/><line nr="137" mi="0" ci="2" mb="0" cb="0"/><line nr="138" mi="0" ci="1" mb="0" cb="0"/><line nr="158" mi="3" ci="45" mb="1" cb="1"/><line nr="159" mi="0" ci="7" mb="0" cb="0"/><line nr="160" mi="0" ci="17" mb="0" cb="2"/><line nr="161" mi="0" ci="22" mb="0" cb="0"/><line nr="162" mi="3" ci="10" mb="1" cb="1"/><line nr="163" mi="0" ci="25" mb="0" cb="2"/><line nr="164" mi="0" ci="14" mb="0" cb="0"/><line nr="165" mi="0" ci="11" mb="0" cb="0"/><line nr="166" mi="0" ci="3" mb="0" cb="0"/><line nr="168" mi="0" ci="2" mb="0" cb="0"/><line nr="169" mi="0" ci="1" mb="0" cb="0"/><line nr="199" mi="3" ci="45" mb="1" cb="1"/><line nr="200" mi="0" ci="7" mb="0" cb="0"/><line nr="201" mi="0" ci="7" mb="0" cb="0"/><line nr="202" mi="0" ci="25" mb="0" cb="2"/><line nr="203" mi="0" ci="12" mb="0" cb="0"/><line nr="204" mi="0" ci="12" mb="0" cb="0"/><line nr="205" mi="0" ci="14" mb="0" cb="2"/><line nr="206" mi="0" ci="6" mb="0" cb="0"/><line nr="207" mi="0" ci="25" mb="0" cb="2"/><line nr="208" mi="0" ci="12" mb="0" cb="4"/><line nr="209" mi="0" ci="19" mb="0" cb="0"/><line nr="210" mi="0" ci="19" mb="0" cb="0"/><line nr="213" mi="0" ci="19" mb="0" cb="0"/><line nr="217" mi="3" ci="10" mb="1" cb="1"/><line nr="218" mi="0" ci="25" mb="0" cb="2"/><line nr="219" mi="0" ci="14" mb="0" cb="2"/><line nr="220" mi="0" ci="2" mb="0" cb="0"/><line nr="221" mi="0" ci="2" mb="0" cb="0"/><line nr="222" mi="0" ci="7" mb="0" cb="2"/><line nr="223" mi="0" ci="16" mb="0" cb="0"/><line nr="224" mi="0" ci="16" mb="0" cb="0"/><line nr="226" mi="0" ci="4" mb="0" cb="0"/><line nr="227" mi="0" ci="25" mb="0" cb="2"/><line nr="228" mi="0" ci="12" mb="0" cb="4"/><line nr="229" mi="0" ci="17" mb="0" cb="2"/><line nr="230" mi="0" ci="7" mb="0" cb="0"/><line nr="233" mi="0" ci="6" mb="0" cb="0"/><line nr="234" mi="0" ci="3" mb="0" cb="0"/><line nr="235" mi="0" ci="3" mb="0" cb="0"/><line nr="237" mi="0" ci="2" mb="0" cb="0"/><line nr="238" mi="0" ci="1" mb="0" cb="0"/><line nr="260" mi="0" ci="10" mb="0" cb="0"/><line nr="298" mi="0" ci="10" mb="0" cb="0"/><line nr="326" mi="0" ci="10" mb="0" cb="0"/><line nr="375" mi="3" ci="45" mb="1" cb="1"/><line nr="376" mi="0" ci="2" mb="0" cb="0"/><line nr="377" mi="0" ci="2" mb="0" cb="0"/><line nr="378" mi="0" ci="2" mb="0" cb="0"/><line nr="379" mi="0" ci="2" mb="0" cb="0"/><line nr="380" mi="0" ci="3" mb="0" cb="0"/><line nr="381" mi="0" ci="17" mb="0" cb="2"/><line nr="382" mi="0" ci="14" mb="0" cb="2"/><line nr="383" mi="0" ci="2" mb="0" cb="2"/><line nr="384" mi="0" ci="3" mb="0" cb="0"/><line nr="385" mi="0" ci="6" mb="0" cb="0"/><line nr="387" mi="0" ci="19" mb="0" cb="0"/><line nr="388" mi="0" ci="17" mb="1" cb="3"/><line nr="389" mi="0" ci="5" mb="0" cb="0"/><line nr="390" mi="0" ci="7" mb="0" cb="0"/><line nr="391" mi="0" ci="7" mb="0" cb="0"/><line nr="392" mi="0" ci="12" mb="0" cb="4"/><line nr="394" mi="0" ci="1" mb="0" cb="0"/><line nr="396" mi="0" ci="10" mb="0" cb="6"/><line nr="398" mi="0" ci="3" mb="0" cb="0"/><line nr="399" mi="0" ci="7" mb="0" cb="0"/><line nr="401" mi="0" ci="11" mb="1" cb="5"/><line nr="403" mi="0" ci="3" mb="0" cb="0"/><line nr="404" mi="0" ci="7" mb="0" cb="0"/><line nr="408" mi="0" ci="17" mb="1" cb="9"/><line nr="410" mi="0" ci="3" mb="0" cb="0"/><line nr="411" mi="0" ci="7" mb="0" cb="0"/><line nr="413" mi="3" ci="15" mb="3" cb="7"/><line nr="415" mi="0" ci="3" mb="0" cb="0"/><line nr="416" mi="0" ci="7" mb="0" cb="0"/><line nr="420" mi="0" ci="25" mb="0" cb="12"/><line nr="422" mi="0" ci="3" mb="0" cb="0"/><line nr="423" mi="0" ci="2" mb="0" cb="0"/><line nr="425" mi="3" ci="23" mb="3" cb="9"/><line nr="427" mi="0" ci="3" mb="0" cb="0"/><line nr="428" mi="0" ci="2" mb="0" cb="0"/><line nr="432" mi="0" ci="14" mb="1" cb="7"/><line nr="434" mi="3" ci="0" mb="0" cb="0"/><line nr="435" mi="2" ci="0" mb="0" cb="0"/><line nr="437" mi="0" ci="15" mb="1" cb="7"/><line nr="439" mi="0" ci="3" mb="0" cb="0"/><line nr="440" mi="0" ci="1" mb="0" cb="0"/><line nr="445" mi="0" ci="28" mb="2" cb="2"/><line nr="446" mi="0" ci="3" mb="0" cb="0"/><line nr="447" mi="0" ci="6" mb="0" cb="0"/><line nr="449" mi="0" ci="3" mb="0" cb="0"/><line nr="451" mi="0" ci="6" mb="1" cb="1"/><line nr="452" mi="0" ci="3" mb="0" cb="0"/><line nr="453" mi="0" ci="2" mb="0" cb="0"/><line nr="454" mi="0" ci="1" mb="0" cb="0"/><line nr="554" mi="0" ci="10" mb="0" cb="0"/><line nr="566" mi="0" ci="10" mb="0" cb="0"/><line nr="595" mi="0" ci="10" mb="0" cb="0"/><line nr="620" mi="0" ci="34" mb="0" cb="4"/><line nr="621" mi="3" ci="45" mb="1" cb="1"/><line nr="622" mi="0" ci="5" mb="0" cb="0"/><line nr="624" mi="0" ci="8" mb="0" cb="0"/><line nr="625" mi="0" ci="4" mb="0" cb="0"/><line nr="627" mi="0" ci="2" mb="0" cb="0"/><line nr="628" mi="0" ci="2" mb="0" cb="0"/><line nr="629" mi="0" ci="2" mb="0" cb="2"/><line nr="630" mi="0" ci="3" mb="0" cb="0"/><line nr="631" mi="0" ci="4" mb="0" cb="0"/><line nr="633" mi="0" ci="12" mb="0" cb="4"/><line nr="634" mi="0" ci="6" mb="0" cb="0"/><line nr="635" mi="0" ci="7" mb="0" cb="0"/><line nr="639" mi="0" ci="9" mb="0" cb="0"/><line nr="640" mi="0" ci="5" mb="0" cb="0"/><line nr="642" mi="0" ci="9" mb="0" cb="0"/><line nr="643" mi="0" ci="6" mb="0" cb="0"/><line nr="644" mi="0" ci="9" mb="0" cb="0"/><line nr="645" mi="0" ci="2" mb="0" cb="0"/><line nr="646" mi="0" ci="2" mb="0" cb="0"/><line nr="649" mi="0" ci="3" mb="1" cb="1"/><line nr="650" mi="6" ci="0" mb="0" cb="0"/><line nr="651" mi="15" ci="0" mb="0" cb="0"/><line nr="653" mi="0" ci="2" mb="0" cb="0"/><line nr="654" mi="0" ci="16" mb="0" cb="0"/><line nr="656" mi="0" ci="4" mb="0" cb="0"/><line nr="657" mi="0" ci="2" mb="0" cb="0"/><line nr="658" mi="0" ci="41" mb="0" cb="0"/><line nr="659" mi="0" ci="13" mb="0" cb="0"/><line nr="663" mi="0" ci="14" mb="0" cb="4"/><line nr="664" mi="0" ci="8" mb="0" cb="0"/><line nr="665" mi="0" ci="4" mb="0" cb="0"/><line nr="666" mi="0" ci="5" mb="0" cb="0"/><line nr="667" mi="0" ci="9" mb="0" cb="0"/><line nr="668" mi="0" ci="7" mb="0" cb="0"/><line nr="669" mi="0" ci="2" mb="0" cb="0"/><line nr="671" mi="0" ci="4" mb="0" cb="2"/><line nr="672" mi="0" ci="2" mb="0" cb="0"/><line nr="673" mi="0" ci="8" mb="0" cb="0"/><line nr="674" mi="0" ci="2" mb="0" cb="0"/><line nr="676" mi="0" ci="9" mb="0" cb="0"/><line nr="678" mi="0" ci="2" mb="0" cb="0"/><line nr="679" mi="0" ci="27" mb="0" cb="0"/><line nr="680" mi="0" ci="14" mb="0" cb="0"/><line nr="681" mi="0" ci="7" mb="0" cb="0"/><line nr="683" mi="0" ci="4" mb="0" cb="0"/><line nr="685" mi="0" ci="2" mb="0" cb="0"/><line nr="686" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="59" covered="2081"/><counter type="BRANCH" missed="26" covered="168"/><counter type="LINE" missed="4" covered="197"/><counter type="COMPLEXITY" missed="24" covered="89"/><counter type="METHOD" missed="0" covered="16"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="59" covered="2081"/><counter type="BRANCH" missed="26" covered="168"/><counter type="LINE" missed="4" covered="197"/><counter type="COMPLEXITY" missed="24" covered="89"/><counter type="METHOD" missed="0" covered="16"/><counter type="CLASS" missed="0" covered="1"/></package><package name="lesson5/task1"><class name="lesson5/task1/MapKt" sourcefilename="Map.kt"><method name="shoppingListCost" desc="(Ljava/util/List;Ljava/util/Map;)D" line="22"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="filterByCountryCode" desc="(Ljava/util/Map;Ljava/lang/String;)V" line="44"><counter type="INSTRUCTION" missed="0" covered="72"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeFillerWords" desc="(Ljava/util/List;[Ljava/lang/String;)Ljava/util/List;" line="67"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="buildWordSet" desc="(Ljava/util/List;)Ljava/util/Set;" line="84"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="buildGrades" desc="(Ljava/util/Map;)Ljava/util/Map;" line="101"><counter type="INSTRUCTION" missed="0" covered="68"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsIn" desc="(Ljava/util/Map;Ljava/util/Map;)Z" line="117"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subtractOf" desc="(Ljava/util/Map;Ljava/util/Map;)V" line="138"><counter type="INSTRUCTION" missed="0" covered="49"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="whoAreInBoth" desc="(Ljava/util/List;Ljava/util/List;)Ljava/util/List;" line="151"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mergePhoneBooks" desc="(Ljava/util/Map;Ljava/util/Map;)Ljava/util/Map;" line="177"><counter type="INSTRUCTION" missed="0" covered="186"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="averageStockPrice" desc="(Ljava/util/List;)Ljava/util/Map;" line="199"><counter type="INSTRUCTION" missed="0" covered="117"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findCheapestStuff" desc="(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/String;" line="226"><counter type="INSTRUCTION" missed="0" covered="71"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="canBuildFrom" desc="(Ljava/util/List;Ljava/lang/String;)Z" line="247"><counter type="INSTRUCTION" missed="0" covered="62"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extractRepeats" desc="(Ljava/util/List;)Ljava/util/Map;" line="267"><counter type="INSTRUCTION" missed="0" covered="53"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasAnagrams" desc="(Ljava/util/List;)Z" line="286"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="friendsOfFriend" desc="(Ljava/lang/String;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;" line="328"><counter type="INSTRUCTION" missed="0" covered="70"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="friendsOfFriend$default" desc="(Ljava/lang/String;Ljava/util/Map;Ljava/util/Set;ILjava/lang/Object;)Ljava/util/Set;" line="323"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="propagateHandshakes" desc="(Ljava/util/Map;)Ljava/util/Map;" line="340"><counter type="INSTRUCTION" missed="0" covered="110"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findSumOfTwo" desc="(Ljava/util/List;I)Lkotlin/Pair;" line="370"><counter type="INSTRUCTION" missed="0" covered="82"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="bagPacking" desc="(Ljava/util/Map;I)Ljava/util/Set;" line="399"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="1177"/><counter type="BRANCH" missed="2" covered="80"/><counter type="LINE" missed="0" covered="89"/><counter type="COMPLEXITY" missed="2" covered="58"/><counter type="METHOD" missed="0" covered="19"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Map.kt"><line nr="22" mi="0" ci="2" mb="0" cb="0"/><line nr="24" mi="0" ci="10" mb="0" cb="2"/><line nr="25" mi="0" ci="5" mb="0" cb="0"/><line nr="26" mi="0" ci="2" mb="0" cb="2"/><line nr="27" mi="0" ci="6" mb="0" cb="0"/><line nr="31" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="0" ci="7" mb="0" cb="0"/><line nr="46" mi="0" ci="31" mb="0" cb="2"/><line nr="47" mi="0" ci="7" mb="0" cb="2"/><line nr="48" mi="0" ci="5" mb="0" cb="0"/><line nr="52" mi="0" ci="10" mb="0" cb="2"/><line nr="53" mi="0" ci="5" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="6" mb="0" cb="0"/><line nr="69" mi="0" ci="7" mb="0" cb="0"/><line nr="70" mi="0" ci="10" mb="0" cb="2"/><line nr="71" mi="0" ci="4" mb="0" cb="2"/><line nr="72" mi="0" ci="10" mb="0" cb="0"/><line nr="75" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="0" ci="7" mb="0" cb="0"/><line nr="85" mi="0" ci="15" mb="0" cb="2"/><line nr="86" mi="0" ci="2" mb="0" cb="0"/><line nr="101" mi="0" ci="7" mb="0" cb="0"/><line nr="102" mi="0" ci="56" mb="0" cb="2"/><line nr="103" mi="0" ci="2" mb="0" cb="0"/><line nr="117" mi="0" ci="31" mb="0" cb="2"/><line nr="118" mi="0" ci="12" mb="1" cb="3"/><line nr="120" mi="0" ci="2" mb="0" cb="0"/><line nr="138" mi="0" ci="31" mb="0" cb="2"/><line nr="139" mi="0" ci="11" mb="0" cb="2"/><line nr="141" mi="0" ci="1" mb="0" cb="0"/><line nr="151" mi="0" ci="7" mb="0" cb="0"/><line nr="152" mi="0" ci="4" mb="0" cb="0"/><line nr="153" mi="0" ci="12" mb="0" cb="2"/><line nr="154" mi="0" ci="9" mb="0" cb="2"/><line nr="156" mi="0" ci="2" mb="0" cb="0"/><line nr="177" mi="0" ci="7" mb="0" cb="0"/><line nr="178" mi="0" ci="7" mb="0" cb="0"/><line nr="179" mi="0" ci="51" mb="0" cb="2"/><line nr="180" mi="0" ci="31" mb="0" cb="2"/><line nr="181" mi="0" ci="28" mb="0" cb="2"/><line nr="183" mi="0" ci="54" mb="0" cb="2"/><line nr="184" mi="0" ci="2" mb="0" cb="0"/><line nr="199" mi="0" ci="7" mb="0" cb="0"/><line nr="200" mi="0" ci="7" mb="0" cb="0"/><line nr="201" mi="0" ci="19" mb="0" cb="2"/><line nr="202" mi="0" ci="21" mb="0" cb="0"/><line nr="204" mi="0" ci="31" mb="0" cb="2"/><line nr="205" mi="0" ci="27" mb="0" cb="0"/><line nr="207" mi="0" ci="2" mb="0" cb="0"/><line nr="226" mi="0" ci="2" mb="0" cb="0"/><line nr="227" mi="0" ci="2" mb="0" cb="0"/><line nr="228" mi="0" ci="31" mb="0" cb="2"/><line nr="229" mi="0" ci="20" mb="1" cb="7"/><line nr="230" mi="0" ci="5" mb="0" cb="0"/><line nr="231" mi="0" ci="3" mb="0" cb="0"/><line nr="233" mi="0" ci="2" mb="0" cb="0"/><line nr="247" mi="0" ci="24" mb="0" cb="0"/><line nr="248" mi="0" ci="23" mb="0" cb="2"/><line nr="249" mi="0" ci="7" mb="0" cb="2"/><line nr="251" mi="0" ci="2" mb="0" cb="0"/><line nr="267" mi="0" ci="7" mb="0" cb="0"/><line nr="268" mi="0" ci="10" mb="0" cb="2"/><line nr="269" mi="0" ci="21" mb="0" cb="0"/><line nr="271" mi="0" ci="12" mb="0" cb="4"/><line nr="286" mi="0" ci="10" mb="0" cb="0"/><line nr="323" mi="0" ci="8" mb="0" cb="0"/><line nr="326" mi="0" ci="7" mb="0" cb="0"/><line nr="328" mi="0" ci="11" mb="0" cb="2"/><line nr="329" mi="0" ci="10" mb="0" cb="2"/><line nr="330" mi="0" ci="4" mb="0" cb="2"/><line nr="331" mi="0" ci="9" mb="0" cb="0"/><line nr="332" mi="0" ci="9" mb="0" cb="0"/><line nr="333" mi="0" ci="16" mb="0" cb="0"/><line nr="336" mi="0" ci="2" mb="0" cb="0"/><line nr="340" mi="0" ci="7" mb="0" cb="0"/><line nr="341" mi="0" ci="31" mb="0" cb="2"/><line nr="342" mi="0" ci="7" mb="0" cb="0"/><line nr="343" mi="0" ci="4" mb="0" cb="0"/><line nr="344" mi="0" ci="20" mb="0" cb="0"/><line nr="345" mi="0" ci="10" mb="0" cb="2"/><line nr="346" mi="0" ci="26" mb="0" cb="2"/><line nr="349" mi="0" ci="2" mb="0" cb="0"/><line nr="370" mi="0" ci="7" mb="0" cb="0"/><line nr="371" mi="0" ci="14" mb="0" cb="4"/><line nr="372" mi="0" ci="29" mb="0" cb="2"/><line nr="373" mi="0" ci="21" mb="0" cb="0"/><line nr="375" mi="0" ci="8" mb="0" cb="0"/><line nr="399" mi="0" ci="10" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="1177"/><counter type="BRANCH" missed="2" covered="80"/><counter type="LINE" missed="0" covered="89"/><counter type="COMPLEXITY" missed="2" covered="58"/><counter type="METHOD" missed="0" covered="19"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="0" covered="1177"/><counter type="BRANCH" missed="2" covered="80"/><counter type="LINE" missed="0" covered="89"/><counter type="COMPLEXITY" missed="2" covered="58"/><counter type="METHOD" missed="0" covered="19"/><counter type="CLASS" missed="0" covered="1"/></package><package name="lesson1/task1"><class name="lesson1/task1/SimpleKt" sourcefilename="Simple.kt"><method name="sqr" desc="(I)I" line="16"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sqr" desc="(D)D" line="23"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="discriminant" desc="(DDD)D" line="30"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="quadraticEquationRoot" desc="(DDD)D" line="38"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="quadraticRootProduct" desc="(DDD)D" line="46"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="main" desc="()V" line="56"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="seconds" desc="(III)I" line="68"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lengthInMeters" desc="(III)D" line="78"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="angleInRadian" desc="(III)D" line="87"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="trackLength" desc="(DDDD)D" line="95"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="thirdDigit" desc="(I)I" line="103"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="travelMinutes" desc="(IIII)I" line="113"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accountInThreeYears" desc="(II)D" line="123"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="numberRevert" desc="(I)I" line="136"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="16" covered="201"/><counter type="LINE" missed="3" covered="21"/><counter type="COMPLEXITY" missed="1" covered="13"/><counter type="METHOD" missed="1" covered="13"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Simple.kt"><line nr="16" mi="0" ci="4" mb="0" cb="0"/><line nr="23" mi="0" ci="4" mb="0" cb="0"/><line nr="30" mi="0" ci="10" mb="0" cb="0"/><line nr="38" mi="0" ci="18" mb="0" cb="0"/><line nr="46" mi="0" ci="10" mb="0" cb="0"/><line nr="47" mi="0" ci="10" mb="0" cb="0"/><line nr="48" mi="0" ci="10" mb="0" cb="0"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="5" ci="0" mb="0" cb="0"/><line nr="57" mi="10" ci="0" mb="0" cb="0"/><line nr="58" mi="1" ci="0" mb="0" cb="0"/><line nr="68" mi="0" ci="10" mb="0" cb="0"/><line nr="78" mi="0" ci="16" mb="0" cb="0"/><line nr="87" mi="0" ci="19" mb="0" cb="0"/><line nr="95" mi="0" ci="15" mb="0" cb="0"/><line nr="103" mi="0" ci="6" mb="0" cb="0"/><line nr="113" mi="0" ci="12" mb="0" cb="0"/><line nr="123" mi="0" ci="9" mb="0" cb="0"/><line nr="124" mi="0" ci="9" mb="0" cb="0"/><line nr="125" mi="0" ci="9" mb="0" cb="0"/><line nr="136" mi="0" ci="4" mb="0" cb="0"/><line nr="137" mi="0" ci="6" mb="0" cb="0"/><line nr="138" mi="0" ci="6" mb="0" cb="0"/><line nr="139" mi="0" ci="10" mb="0" cb="0"/><counter type="INSTRUCTION" missed="16" covered="201"/><counter type="LINE" missed="3" covered="21"/><counter type="COMPLEXITY" missed="1" covered="13"/><counter type="METHOD" missed="1" covered="13"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="16" covered="201"/><counter type="LINE" missed="3" covered="21"/><counter type="COMPLEXITY" missed="1" covered="13"/><counter type="METHOD" missed="1" covered="13"/><counter type="CLASS" missed="0" covered="1"/></package><package name="lesson11/task1"><class name="lesson11/task1/Dimension" sourcefilename="DimensionalValue.kt"><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/lang/String;)V" line="80"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAbbreviation" desc="()Ljava/lang/String;" line="80"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="81"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="lesson11/task1/Complex" sourcefilename="Complex.kt"><method name="&lt;init&gt;" desc="(DD)V" line="19"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRe" desc="()D" line="19"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIm" desc="()D" line="19"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(D)V" line="24"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="plus" desc="(Llesson11/task1/Complex;)Llesson11/task1/Complex;" line="29"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="unaryMinus" desc="()Llesson11/task1/Complex;" line="34"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="minus" desc="(Llesson11/task1/Complex;)Llesson11/task1/Complex;" line="39"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="times" desc="(Llesson11/task1/Complex;)Llesson11/task1/Complex;" line="44"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="div" desc="(Llesson11/task1/Complex;)Llesson11/task1/Complex;" line="49"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="54"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="59"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="89" covered="19"/><counter type="LINE" missed="7" covered="2"/><counter type="COMPLEXITY" missed="9" covered="2"/><counter type="METHOD" missed="9" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="lesson11/task1/Rational" sourcefilename="Rational.kt"><method name="&lt;init&gt;" desc="(II)V" line="13"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNumerator" desc="()I" line="15"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDenominator" desc="()I" line="17"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="gcd" desc="(II)I" line="20"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="plus" desc="(Llesson11/task1/Rational;)Llesson11/task1/Rational;" line="38"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="unaryMinus" desc="()Llesson11/task1/Rational;" line="46"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="minus" desc="(Llesson11/task1/Rational;)Llesson11/task1/Rational;" line="51"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="times" desc="(Llesson11/task1/Rational;)Llesson11/task1/Rational;" line="57"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="div" desc="(Llesson11/task1/Rational;)Llesson11/task1/Rational;" line="63"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toInt" desc="()I" line="68"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toDouble" desc="()D" line="73"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="79"><counter type="INSTRUCTION" missed="5" covered="22"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="86"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="94"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="compareTo" desc="(Llesson11/task1/Rational;)I" line="100"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="30" covered="209"/><counter type="BRANCH" missed="5" covered="15"/><counter type="LINE" missed="5" covered="32"/><counter type="COMPLEXITY" missed="7" covered="18"/><counter type="METHOD" missed="2" covered="13"/><counter type="CLASS" missed="0" covered="1"/></class><class name="lesson11/task1/ComplexKt" sourcefilename="Complex.kt"><method name="Complex" desc="(Ljava/lang/String;)Llesson11/task1/Complex;" line="8"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="lesson11/task1/DimensionalValue" sourcefilename="DimensionalValue.kt"><method name="&lt;init&gt;" desc="(DLjava/lang/String;)V" line="19"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValue" desc="()D" line="23"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDimension" desc="()Llesson11/task1/Dimension;" line="28"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="33"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="plus" desc="(Llesson11/task1/DimensionalValue;)Llesson11/task1/DimensionalValue;" line="39"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="unaryMinus" desc="()Llesson11/task1/DimensionalValue;" line="44"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="minus" desc="(Llesson11/task1/DimensionalValue;)Llesson11/task1/DimensionalValue;" line="49"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="times" desc="(D)Llesson11/task1/DimensionalValue;" line="54"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="div" desc="(D)Llesson11/task1/DimensionalValue;" line="59"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="div" desc="(Llesson11/task1/DimensionalValue;)D" line="64"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="69"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="compareTo" desc="(Llesson11/task1/DimensionalValue;)I" line="74"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="102" covered="30"/><counter type="LINE" missed="9" covered="3"/><counter type="COMPLEXITY" missed="9" covered="3"/><counter type="METHOD" missed="9" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="lesson11/task1/DimensionPrefix" sourcefilename="DimensionalValue.kt"><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/lang/String;D)V" line="88"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAbbreviation" desc="()Ljava/lang/String;" line="88"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMultiplier" desc="()D" line="88"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="89"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="lesson11/task1/Polynom" sourcefilename="Polynom.kt"><method name="&lt;init&gt;" desc="([D)V" line="22"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="coeff" desc="(I)D" line="27"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue" desc="(D)D" line="32"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="degree" desc="()I" line="41"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="plus" desc="(Llesson11/task1/Polynom;)Llesson11/task1/Polynom;" line="46"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="unaryMinus" desc="()Llesson11/task1/Polynom;" line="51"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="minus" desc="(Llesson11/task1/Polynom;)Llesson11/task1/Polynom;" line="56"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="times" desc="(Llesson11/task1/Polynom;)Llesson11/task1/Polynom;" line="61"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="div" desc="(Llesson11/task1/Polynom;)Llesson11/task1/Polynom;" line="71"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rem" desc="(Llesson11/task1/Polynom;)Llesson11/task1/Polynom;" line="76"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="81"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="86"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="10" covered="121"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="1" covered="11"/><counter type="METHOD" missed="1" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="lesson11/task1/UnsignedBigInteger" sourcefilename="UnsignedBigInteger.kt"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="21"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(I)V" line="28"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="plus" desc="(Llesson11/task1/UnsignedBigInteger;)Llesson11/task1/UnsignedBigInteger;" line="35"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="minus" desc="(Llesson11/task1/UnsignedBigInteger;)Llesson11/task1/UnsignedBigInteger;" line="40"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="times" desc="(Llesson11/task1/UnsignedBigInteger;)Llesson11/task1/UnsignedBigInteger;" line="45"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="div" desc="(Llesson11/task1/UnsignedBigInteger;)Llesson11/task1/UnsignedBigInteger;" line="50"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="rem" desc="(Llesson11/task1/UnsignedBigInteger;)Llesson11/task1/UnsignedBigInteger;" line="55"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="60"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="compareTo" desc="(Llesson11/task1/UnsignedBigInteger;)I" line="65"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="70"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toInt" desc="()I" line="76"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="108" covered="27"/><counter type="LINE" missed="9" covered="4"/><counter type="COMPLEXITY" missed="9" covered="2"/><counter type="METHOD" missed="9" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="lesson11/task1/FixedPointNumber" sourcefilename="FixedPointNumber.kt"><method name="getPrecision" desc="()I" line="23"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="33"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(DI)V" line="40"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(I)V" line="47"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="plus" desc="(Llesson11/task1/FixedPointNumber;)Llesson11/task1/FixedPointNumber;" line="58"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="unaryMinus" desc="()Llesson11/task1/FixedPointNumber;" line="63"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="minus" desc="(Llesson11/task1/FixedPointNumber;)Llesson11/task1/FixedPointNumber;" line="68"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="times" desc="(Llesson11/task1/FixedPointNumber;)Llesson11/task1/FixedPointNumber;" line="73"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="div" desc="(Llesson11/task1/FixedPointNumber;)Llesson11/task1/FixedPointNumber;" line="78"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="83"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="compareTo" desc="(Llesson11/task1/FixedPointNumber;)I" line="88"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="93"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toDouble" desc="()D" line="98"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="127" covered="27"/><counter type="LINE" missed="12" covered="4"/><counter type="COMPLEXITY" missed="11" covered="2"/><counter type="METHOD" missed="11" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Rational.kt"><line nr="13" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="0" ci="3" mb="0" cb="0"/><line nr="17" mi="0" ci="3" mb="0" cb="0"/><line nr="20" mi="0" ci="12" mb="0" cb="0"/><line nr="21" mi="0" ci="7" mb="1" cb="3"/><line nr="22" mi="0" ci="4" mb="0" cb="2"/><line nr="23" mi="0" ci="12" mb="0" cb="2"/><line nr="24" mi="0" ci="9" mb="0" cb="0"/><line nr="25" mi="0" ci="1" mb="0" cb="0"/><line nr="27" mi="0" ci="1" mb="0" cb="0"/><line nr="28" mi="0" ci="7" mb="0" cb="2"/><line nr="29" mi="0" ci="11" mb="0" cb="0"/><line nr="30" mi="0" ci="5" mb="0" cb="2"/><line nr="31" mi="0" ci="5" mb="0" cb="0"/><line nr="32" mi="0" ci="5" mb="0" cb="0"/><line nr="33" mi="0" ci="1" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="11" mb="0" cb="0"/><line nr="40" mi="0" ci="5" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="0" ci="9" mb="0" cb="0"/><line nr="51" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="0" ci="14" mb="0" cb="0"/><line nr="63" mi="0" ci="14" mb="0" cb="0"/><line nr="68" mi="0" ci="6" mb="0" cb="0"/><line nr="73" mi="0" ci="8" mb="0" cb="0"/><line nr="79" mi="0" ci="1" mb="0" cb="0"/><line nr="80" mi="2" ci="3" mb="1" cb="1"/><line nr="81" mi="2" ci="17" mb="3" cb="3"/><line nr="82" mi="1" ci="0" mb="0" cb="0"/><line nr="83" mi="0" ci="1" mb="0" cb="0"/><line nr="86" mi="3" ci="0" mb="0" cb="0"/><line nr="87" mi="7" ci="0" mb="0" cb="0"/><line nr="88" mi="2" ci="0" mb="0" cb="0"/><line nr="94" mi="13" ci="0" mb="0" cb="0"/><line nr="100" mi="0" ci="4" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="30" covered="209"/><counter type="BRANCH" missed="5" covered="15"/><counter type="LINE" missed="5" covered="32"/><counter type="COMPLEXITY" missed="7" covered="18"/><counter type="METHOD" missed="2" covered="13"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Complex.kt"><line nr="8" mi="0" ci="10" mb="0" cb="0"/><line nr="19" mi="6" ci="9" mb="0" cb="0"/><line nr="24" mi="11" ci="0" mb="0" cb="0"/><line nr="29" mi="10" ci="0" mb="0" cb="0"/><line nr="34" mi="0" ci="10" mb="0" cb="0"/><line nr="39" mi="10" ci="0" mb="0" cb="0"/><line nr="44" mi="10" ci="0" mb="0" cb="0"/><line nr="49" mi="10" ci="0" mb="0" cb="0"/><line nr="54" mi="10" ci="0" mb="0" cb="0"/><line nr="59" mi="10" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="89" covered="32"/><counter type="LINE" missed="7" covered="3"/><counter type="COMPLEXITY" missed="9" covered="3"/><counter type="METHOD" missed="9" covered="3"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="FixedPointNumber.kt"><line nr="23" mi="10" ci="0" mb="0" cb="0"/><line nr="33" mi="0" ci="2" mb="0" cb="0"/><line nr="34" mi="0" ci="10" mb="0" cb="0"/><line nr="40" mi="0" ci="2" mb="0" cb="0"/><line nr="41" mi="0" ci="10" mb="0" cb="0"/><line nr="47" mi="2" ci="0" mb="0" cb="0"/><line nr="48" mi="10" ci="0" mb="0" cb="0"/><line nr="58" mi="10" ci="0" mb="0" cb="0"/><line nr="63" mi="10" ci="0" mb="0" cb="0"/><line nr="68" mi="10" ci="0" mb="0" cb="0"/><line nr="73" mi="10" ci="0" mb="0" cb="0"/><line nr="78" mi="10" ci="0" mb="0" cb="0"/><line nr="83" mi="10" ci="0" mb="0" cb="0"/><line nr="88" mi="10" ci="0" mb="0" cb="0"/><line nr="93" mi="10" ci="0" mb="0" cb="0"/><line nr="98" mi="10" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="127" covered="27"/><counter type="LINE" missed="12" covered="4"/><counter type="COMPLEXITY" missed="11" covered="2"/><counter type="METHOD" missed="11" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Polynom.kt"><line nr="22" mi="0" ci="3" mb="0" cb="0"/><line nr="27" mi="10" ci="0" mb="0" cb="0"/><line nr="32" mi="0" ci="10" mb="0" cb="0"/><line nr="41" mi="0" ci="10" mb="0" cb="0"/><line nr="46" mi="0" ci="10" mb="0" cb="0"/><line nr="51" mi="0" ci="10" mb="0" cb="0"/><line nr="56" mi="0" ci="10" mb="0" cb="0"/><line nr="61" mi="0" ci="10" mb="0" cb="0"/><line nr="71" mi="0" ci="10" mb="0" cb="0"/><line nr="76" mi="0" ci="10" mb="0" cb="0"/><line nr="81" mi="0" ci="10" mb="0" cb="0"/><line nr="86" mi="0" ci="10" mb="0" cb="0"/><counter type="INSTRUCTION" missed="10" covered="121"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="1" covered="11"/><counter type="METHOD" missed="1" covered="11"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DimensionalValue.kt"><line nr="19" mi="0" ci="3" mb="0" cb="0"/><line nr="23" mi="0" ci="10" mb="0" cb="0"/><line nr="28" mi="10" ci="0" mb="0" cb="0"/><line nr="33" mi="0" ci="11" mb="0" cb="0"/><line nr="39" mi="10" ci="0" mb="0" cb="0"/><line nr="44" mi="10" ci="0" mb="0" cb="0"/><line nr="49" mi="10" ci="0" mb="0" cb="0"/><line nr="54" mi="10" ci="0" mb="0" cb="0"/><line nr="59" mi="10" ci="0" mb="0" cb="0"/><line nr="64" mi="10" ci="0" mb="0" cb="0"/><line nr="69" mi="10" ci="0" mb="0" cb="0"/><line nr="74" mi="10" ci="0" mb="0" cb="0"/><line nr="80" mi="11" ci="0" mb="0" cb="0"/><line nr="81" mi="7" ci="0" mb="0" cb="0"/><line nr="82" mi="10" ci="0" mb="0" cb="0"/><line nr="88" mi="17" ci="0" mb="0" cb="0"/><line nr="89" mi="8" ci="0" mb="0" cb="0"/><line nr="90" mi="11" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="166" covered="30"/><counter type="LINE" missed="15" covered="3"/><counter type="COMPLEXITY" missed="16" covered="3"/><counter type="METHOD" missed="16" covered="3"/><counter type="CLASS" missed="2" covered="1"/></sourcefile><sourcefile name="UnsignedBigInteger.kt"><line nr="21" mi="0" ci="2" mb="0" cb="0"/><line nr="22" mi="0" ci="10" mb="0" cb="0"/><line nr="28" mi="0" ci="2" mb="0" cb="0"/><line nr="29" mi="0" ci="10" mb="0" cb="0"/><line nr="35" mi="10" ci="0" mb="0" cb="0"/><line nr="40" mi="10" ci="0" mb="0" cb="0"/><line nr="45" mi="10" ci="0" mb="0" cb="0"/><line nr="50" mi="10" ci="0" mb="0" cb="0"/><line nr="55" mi="10" ci="0" mb="0" cb="0"/><line nr="60" mi="10" ci="0" mb="0" cb="0"/><line nr="65" mi="10" ci="0" mb="0" cb="0"/><line nr="70" mi="10" ci="0" mb="0" cb="0"/><line nr="76" mi="10" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="108" covered="27"/><counter type="LINE" missed="9" covered="4"/><counter type="COMPLEXITY" missed="9" covered="2"/><counter type="METHOD" missed="9" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="530" covered="446"/><counter type="BRANCH" missed="5" covered="15"/><counter type="LINE" missed="49" covered="57"/><counter type="COMPLEXITY" missed="53" covered="39"/><counter type="METHOD" missed="48" covered="34"/><counter type="CLASS" missed="2" covered="7"/></package><package name="lesson9/task2"><class name="lesson9/task2/MatricesKt" sourcefilename="Matrices.kt"><method name="transpose" desc="(Llesson9/task1/Matrix;)Llesson9/task1/Matrix;" line="22"><counter type="INSTRUCTION" missed="61" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="plus" desc="(Llesson9/task1/Matrix;Llesson9/task1/Matrix;)Llesson9/task1/Matrix;" line="40"><counter type="INSTRUCTION" missed="109" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="generateSpiral" desc="(II)Llesson9/task1/Matrix;" line="63"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="generateRectangles" desc="(II)Llesson9/task1/Matrix;" line="79"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="generateSnake" desc="(II)Llesson9/task1/Matrix;" line="94"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="rotate" desc="(Llesson9/task1/Matrix;)Llesson9/task1/Matrix;" line="107"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isLatinSquare" desc="(Llesson9/task1/Matrix;)Z" line="122"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sumNeighbours" desc="(Llesson9/task1/Matrix;)Llesson9/task1/Matrix;" line="141"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findHoles" desc="(Llesson9/task1/Matrix;)Llesson9/task2/Holes;" line="158"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sumSubMatrix" desc="(Llesson9/task1/Matrix;)Llesson9/task1/Matrix;" line="179"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="unaryMinus" desc="(Llesson9/task1/Matrix;)Llesson9/task1/Matrix;" line="187"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="times" desc="(Llesson9/task1/Matrix;Llesson9/task1/Matrix;)Llesson9/task1/Matrix;" line="197"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canOpenLock" desc="(Llesson9/task1/Matrix;Llesson9/task1/Matrix;)Lkotlin/Triple;" line="219"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fifteenGameMoves" desc="(Llesson9/task1/Matrix;Ljava/util/List;)Llesson9/task1/Matrix;" line="248"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fifteenGameSolution" desc="(Llesson9/task1/Matrix;)Ljava/util/List;" line="289"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="355" covered="0"/><counter type="BRANCH" missed="30" covered="0"/><counter type="LINE" missed="26" covered="0"/><counter type="COMPLEXITY" missed="30" covered="0"/><counter type="METHOD" missed="15" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="lesson9/task2/Holes" sourcefilename="Matrices.kt"><method name="&lt;init&gt;" desc="(Ljava/util/List;Ljava/util/List;)V" line="163"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRows" desc="()Ljava/util/List;" line="163"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getColumns" desc="()Ljava/util/List;" line="163"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Matrices.kt"><line nr="22" mi="10" ci="0" mb="4" cb="0"/><line nr="23" mi="10" ci="0" mb="0" cb="0"/><line nr="24" mi="14" ci="0" mb="4" cb="0"/><line nr="25" mi="14" ci="0" mb="4" cb="0"/><line nr="26" mi="8" ci="0" mb="0" cb="0"/><line nr="29" mi="2" ci="0" mb="0" cb="0"/><line nr="40" mi="35" ci="0" mb="6" cb="0"/><line nr="41" mi="10" ci="0" mb="4" cb="0"/><line nr="42" mi="10" ci="0" mb="0" cb="0"/><line nr="43" mi="14" ci="0" mb="4" cb="0"/><line nr="44" mi="14" ci="0" mb="4" cb="0"/><line nr="45" mi="18" ci="0" mb="0" cb="0"/><line nr="48" mi="2" ci="0" mb="0" cb="0"/><line nr="63" mi="10" ci="0" mb="0" cb="0"/><line nr="79" mi="10" ci="0" mb="0" cb="0"/><line nr="94" mi="10" ci="0" mb="0" cb="0"/><line nr="107" mi="10" ci="0" mb="0" cb="0"/><line nr="122" mi="10" ci="0" mb="0" cb="0"/><line nr="141" mi="10" ci="0" mb="0" cb="0"/><line nr="158" mi="10" ci="0" mb="0" cb="0"/><line nr="163" mi="6" ci="9" mb="0" cb="0"/><line nr="179" mi="10" ci="0" mb="0" cb="0"/><line nr="187" mi="18" ci="0" mb="0" cb="0"/><line nr="197" mi="18" ci="0" mb="0" cb="0"/><line nr="219" mi="10" ci="0" mb="0" cb="0"/><line nr="248" mi="10" ci="0" mb="0" cb="0"/><line nr="289" mi="10" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="361" covered="15"/><counter type="BRANCH" missed="30" covered="0"/><counter type="LINE" missed="26" covered="1"/><counter type="COMPLEXITY" missed="32" covered="1"/><counter type="METHOD" missed="17" covered="1"/><counter type="CLASS" missed="1" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="361" covered="15"/><counter type="BRANCH" missed="30" covered="0"/><counter type="LINE" missed="26" covered="1"/><counter type="COMPLEXITY" missed="32" covered="1"/><counter type="METHOD" missed="17" covered="1"/><counter type="CLASS" missed="1" covered="1"/></package><package name="lesson9/task1"><class name="lesson9/task1/Matrix" sourcefilename="Matrix.kt"/><class name="lesson9/task1/Cell" sourcefilename="Matrix.kt"><method name="&lt;init&gt;" desc="(II)V" line="11"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRow" desc="()I" line="11"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getColumn" desc="()I" line="11"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="lesson9/task1/MatrixImpl" sourcefilename="Matrix.kt"><method name="&lt;init&gt;" desc="()V" line="54"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getHeight" desc="()I" line="55"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getWidth" desc="()I" line="57"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(II)Ljava/lang/Object;" line="59"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(Llesson9/task1/Cell;)Ljava/lang/Object;" line="61"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(IILjava/lang/Object;)V" line="64"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(Llesson9/task1/Cell;Ljava/lang/Object;)V" line="68"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Ljava/lang/Void;" line="71"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="73"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="85" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="lesson9/task1/MatrixKt" sourcefilename="Matrix.kt"><method name="createMatrix" desc="(IILjava/lang/Object;)Llesson9/task1/Matrix;" line="47"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Matrix.kt"><line nr="11" mi="15" ci="0" mb="0" cb="0"/><line nr="47" mi="0" ci="10" mb="0" cb="0"/><line nr="54" mi="2" ci="0" mb="0" cb="0"/><line nr="55" mi="14" ci="0" mb="0" cb="0"/><line nr="57" mi="3" ci="0" mb="0" cb="0"/><line nr="59" mi="10" ci="0" mb="0" cb="0"/><line nr="61" mi="10" ci="0" mb="0" cb="0"/><line nr="64" mi="10" ci="0" mb="0" cb="0"/><line nr="68" mi="10" ci="0" mb="0" cb="0"/><line nr="71" mi="10" ci="0" mb="0" cb="0"/><line nr="73" mi="10" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="100" covered="10"/><counter type="LINE" missed="10" covered="1"/><counter type="COMPLEXITY" missed="12" covered="1"/><counter type="METHOD" missed="12" covered="1"/><counter type="CLASS" missed="2" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="100" covered="10"/><counter type="LINE" missed="10" covered="1"/><counter type="COMPLEXITY" missed="12" covered="1"/><counter type="METHOD" missed="12" covered="1"/><counter type="CLASS" missed="2" covered="1"/></package><package name="lesson4/task1"><class name="lesson4/task1/ListKt$convertToString$1" sourcefilename="List.kt"><method name="invoke" desc="(I)Ljava/lang/CharSequence;" line="274"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="lesson4/task1/ListKt" sourcefilename="List.kt"><method name="sqRoots" desc="(D)Ljava/util/List;" line="20"><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="biRoots" desc="(DDD)Ljava/util/List;" line="37"><counter type="INSTRUCTION" missed="0" covered="90"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="negativeList" desc="(Ljava/util/List;)Ljava/util/List;" line="55"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="invertPositives" desc="(Ljava/util/List;)V" line="70"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="squares" desc="(Ljava/util/List;)Ljava/util/List;" line="83"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="squares" desc="([I)[Ljava/lang/Integer;" line="90"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isPalindrome" desc="(Ljava/lang/String;)Z" line="102"><counter type="INSTRUCTION" missed="0" covered="61"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="buildSumExample" desc="(Ljava/util/List;)Ljava/lang/String;" line="115"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="abs" desc="(Ljava/util/List;)D" line="125"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mean" desc="(Ljava/util/List;)D" line="138"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="center" desc="(Ljava/util/List;)Ljava/util/List;" line="156"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="times" desc="(Ljava/util/List;Ljava/util/List;)I" line="171"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="polynom" desc="(Ljava/util/List;I)I" line="187"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accumulate" desc="(Ljava/util/List;)Ljava/util/List;" line="207"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="factorize" desc="(I)Ljava/util/List;" line="219"><counter type="INSTRUCTION" missed="0" covered="53"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="factorizeToString" desc="(I)Ljava/lang/String;" line="239"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convert" desc="(II)Ljava/util/List;" line="249"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertToString" desc="(II)Ljava/lang/String;" line="271"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="decimal" desc="(Ljava/util/List;I)I" line="286"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="decimalFromString" desc="(Ljava/lang/String;I)I" line="308"><counter type="INSTRUCTION" missed="0" covered="61"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="partOfRoman" desc="(ICCC)Ljava/lang/String;" line="325"><counter type="INSTRUCTION" missed="0" covered="113"/><counter type="BRANCH" missed="0" covered="24"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="13"/><counter type="METHOD" missed="0" covered="1"/></method><method name="roman" desc="(I)Ljava/lang/String;" line="336"><counter type="INSTRUCTION" missed="0" covered="78"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="russian" desc="(I)Ljava/lang/String;" line="360"><counter type="INSTRUCTION" missed="13" covered="484"/><counter type="BRANCH" missed="8" covered="40"/><counter type="LINE" missed="0" covered="40"/><counter type="COMPLEXITY" missed="7" covered="18"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="13" covered="1420"/><counter type="BRANCH" missed="11" covered="143"/><counter type="LINE" missed="0" covered="147"/><counter type="COMPLEXITY" missed="10" covered="90"/><counter type="METHOD" missed="0" covered="23"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="List.kt"><line nr="20" mi="0" ci="1" mb="0" cb="0"/><line nr="21" mi="0" ci="8" mb="0" cb="2"/><line nr="22" mi="0" ci="12" mb="0" cb="4"/><line nr="24" mi="0" ci="5" mb="0" cb="0"/><line nr="26" mi="0" ci="16" mb="0" cb="0"/><line nr="28" mi="0" ci="1" mb="0" cb="0"/><line nr="37" mi="0" ci="8" mb="0" cb="4"/><line nr="38" mi="0" ci="13" mb="0" cb="4"/><line nr="39" mi="0" ci="5" mb="0" cb="0"/><line nr="41" mi="0" ci="5" mb="0" cb="0"/><line nr="42" mi="0" ci="8" mb="0" cb="2"/><line nr="43" mi="0" ci="17" mb="0" cb="4"/><line nr="44" mi="0" ci="13" mb="0" cb="0"/><line nr="45" mi="0" ci="13" mb="0" cb="0"/><line nr="46" mi="0" ci="8" mb="0" cb="0"/><line nr="55" mi="0" ci="7" mb="0" cb="0"/><line nr="56" mi="0" ci="11" mb="0" cb="2"/><line nr="57" mi="0" ci="2" mb="0" cb="2"/><line nr="58" mi="0" ci="6" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="70" mi="0" ci="14" mb="1" cb="3"/><line nr="71" mi="0" ci="6" mb="0" cb="0"/><line nr="72" mi="0" ci="2" mb="0" cb="2"/><line nr="73" mi="0" ci="7" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="83" mi="0" ci="15" mb="0" cb="0"/><line nr="90" mi="0" ci="8" mb="0" cb="0"/><line nr="102" mi="0" ci="26" mb="0" cb="4"/><line nr="103" mi="0" ci="16" mb="1" cb="3"/><line nr="104" mi="0" ci="14" mb="0" cb="2"/><line nr="106" mi="0" ci="2" mb="0" cb="0"/><line nr="115" mi="0" ci="19" mb="0" cb="0"/><line nr="125" mi="0" ci="2" mb="0" cb="0"/><line nr="126" mi="0" ci="11" mb="0" cb="2"/><line nr="127" mi="0" ci="7" mb="0" cb="0"/><line nr="129" mi="0" ci="5" mb="0" cb="0"/><line nr="138" mi="0" ci="2" mb="0" cb="0"/><line nr="139" mi="0" ci="5" mb="0" cb="2"/><line nr="140" mi="0" ci="11" mb="0" cb="2"/><line nr="141" mi="0" ci="5" mb="0" cb="0"/><line nr="143" mi="0" ci="6" mb="0" cb="0"/><line nr="144" mi="0" ci="2" mb="0" cb="0"/><line nr="156" mi="0" ci="3" mb="0" cb="0"/><line nr="157" mi="0" ci="14" mb="0" cb="4"/><line nr="158" mi="0" ci="16" mb="0" cb="0"/><line nr="160" mi="0" ci="2" mb="0" cb="0"/><line nr="171" mi="0" ci="2" mb="0" cb="0"/><line nr="172" mi="0" ci="14" mb="0" cb="4"/><line nr="173" mi="0" ci="14" mb="0" cb="0"/><line nr="175" mi="0" ci="2" mb="0" cb="0"/><line nr="187" mi="0" ci="2" mb="0" cb="0"/><line nr="188" mi="0" ci="2" mb="0" cb="0"/><line nr="189" mi="0" ci="14" mb="0" cb="4"/><line nr="190" mi="0" ci="10" mb="0" cb="0"/><line nr="191" mi="0" ci="4" mb="0" cb="0"/><line nr="193" mi="0" ci="2" mb="0" cb="0"/><line nr="207" mi="0" ci="36" mb="0" cb="4"/><line nr="208" mi="0" ci="2" mb="0" cb="0"/><line nr="219" mi="0" ci="7" mb="0" cb="0"/><line nr="220" mi="0" ci="2" mb="0" cb="0"/><line nr="221" mi="0" ci="20" mb="0" cb="4"/><line nr="222" mi="0" ci="4" mb="0" cb="2"/><line nr="223" mi="0" ci="5" mb="0" cb="0"/><line nr="224" mi="0" ci="5" mb="0" cb="0"/><line nr="227" mi="0" ci="8" mb="0" cb="2"/><line nr="228" mi="0" ci="2" mb="0" cb="0"/><line nr="239" mi="0" ci="14" mb="0" cb="0"/><line nr="249" mi="0" ci="7" mb="0" cb="0"/><line nr="250" mi="0" ci="2" mb="0" cb="0"/><line nr="252" mi="0" ci="7" mb="0" cb="0"/><line nr="253" mi="0" ci="4" mb="0" cb="0"/><line nr="254" mi="0" ci="2" mb="0" cb="2"/><line nr="255" mi="0" ci="2" mb="0" cb="0"/><line nr="256" mi="0" ci="2" mb="0" cb="0"/><line nr="271" mi="0" ci="2" mb="0" cb="0"/><line nr="272" mi="0" ci="12" mb="0" cb="0"/><line nr="273" mi="0" ci="2" mb="0" cb="0"/><line nr="274" mi="0" ci="21" mb="0" cb="2"/><line nr="286" mi="0" ci="2" mb="0" cb="0"/><line nr="287" mi="0" ci="16" mb="0" cb="0"/><line nr="288" mi="0" ci="11" mb="0" cb="2"/><line nr="289" mi="0" ci="6" mb="0" cb="0"/><line nr="290" mi="0" ci="5" mb="0" cb="0"/><line nr="292" mi="0" ci="2" mb="0" cb="0"/><line nr="308" mi="0" ci="7" mb="0" cb="0"/><line nr="309" mi="0" ci="14" mb="1" cb="3"/><line nr="310" mi="0" ci="25" mb="0" cb="2"/><line nr="311" mi="0" ci="8" mb="0" cb="0"/><line nr="313" mi="0" ci="4" mb="0" cb="0"/><line nr="325" mi="0" ci="21" mb="0" cb="0"/><line nr="326" mi="0" ci="17" mb="0" cb="6"/><line nr="327" mi="0" ci="2" mb="0" cb="0"/><line nr="328" mi="0" ci="42" mb="0" cb="14"/><line nr="329" mi="0" ci="15" mb="0" cb="2"/><line nr="330" mi="0" ci="14" mb="0" cb="2"/><line nr="332" mi="0" ci="2" mb="0" cb="0"/><line nr="336" mi="0" ci="4" mb="0" cb="0"/><line nr="337" mi="0" ci="6" mb="0" cb="0"/><line nr="338" mi="0" ci="6" mb="0" cb="0"/><line nr="339" mi="0" ci="4" mb="0" cb="0"/><line nr="340" mi="0" ci="22" mb="0" cb="0"/><line nr="341" mi="0" ci="9" mb="0" cb="2"/><line nr="342" mi="0" ci="8" mb="0" cb="0"/><line nr="343" mi="0" ci="8" mb="0" cb="0"/><line nr="344" mi="0" ci="8" mb="0" cb="0"/><line nr="345" mi="0" ci="1" mb="0" cb="0"/><line nr="346" mi="0" ci="2" mb="0" cb="0"/><line nr="360" mi="0" ci="2" mb="0" cb="0"/><line nr="361" mi="0" ci="32" mb="0" cb="0"/><line nr="362" mi="0" ci="6" mb="0" cb="0"/><line nr="363" mi="0" ci="6" mb="0" cb="0"/><line nr="364" mi="0" ci="4" mb="0" cb="0"/><line nr="367" mi="0" ci="2" mb="0" cb="0"/><line nr="368" mi="0" ci="30" mb="0" cb="0"/><line nr="369" mi="0" ci="6" mb="0" cb="0"/><line nr="370" mi="0" ci="6" mb="0" cb="0"/><line nr="371" mi="0" ci="2" mb="0" cb="0"/><line nr="374" mi="0" ci="2" mb="0" cb="0"/><line nr="375" mi="0" ci="26" mb="0" cb="0"/><line nr="376" mi="0" ci="6" mb="0" cb="0"/><line nr="377" mi="0" ci="4" mb="0" cb="0"/><line nr="380" mi="0" ci="2" mb="0" cb="0"/><line nr="381" mi="0" ci="28" mb="0" cb="0"/><line nr="382" mi="0" ci="6" mb="0" cb="0"/><line nr="383" mi="0" ci="6" mb="0" cb="0"/><line nr="386" mi="0" ci="4" mb="0" cb="0"/><line nr="387" mi="0" ci="6" mb="0" cb="0"/><line nr="388" mi="0" ci="6" mb="0" cb="0"/><line nr="389" mi="0" ci="6" mb="0" cb="0"/><line nr="390" mi="0" ci="6" mb="0" cb="0"/><line nr="391" mi="0" ci="4" mb="0" cb="0"/><line nr="393" mi="0" ci="22" mb="0" cb="0"/><line nr="394" mi="0" ci="22" mb="0" cb="2"/><line nr="395" mi="0" ci="23" mb="0" cb="2"/><line nr="396" mi="0" ci="22" mb="0" cb="2"/><line nr="397" mi="0" ci="22" mb="0" cb="2"/><line nr="398" mi="0" ci="1" mb="0" cb="0"/><line nr="399" mi="0" ci="11" mb="1" cb="5"/><line nr="400" mi="2" ci="18" mb="1" cb="7"/><line nr="401" mi="8" ci="3" mb="3" cb="1"/><line nr="402" mi="2" ci="17" mb="2" cb="6"/><line nr="404" mi="0" ci="22" mb="0" cb="2"/><line nr="405" mi="0" ci="23" mb="0" cb="2"/><line nr="406" mi="0" ci="22" mb="0" cb="2"/><line nr="407" mi="1" ci="37" mb="1" cb="7"/><line nr="408" mi="0" ci="1" mb="0" cb="0"/><line nr="409" mi="0" ci="10" mb="0" cb="0"/><counter type="INSTRUCTION" missed="13" covered="1436"/><counter type="BRANCH" missed="11" covered="145"/><counter type="LINE" missed="0" covered="147"/><counter type="COMPLEXITY" missed="10" covered="92"/><counter type="METHOD" missed="0" covered="24"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><counter type="INSTRUCTION" missed="13" covered="1436"/><counter type="BRANCH" missed="11" covered="145"/><counter type="LINE" missed="0" covered="147"/><counter type="COMPLEXITY" missed="10" covered="92"/><counter type="METHOD" missed="0" covered="24"/><counter type="CLASS" missed="0" covered="2"/></package><package name="lesson12/task1"><class name="lesson12/task1/Stop" sourcefilename="TrainTimeTable.kt"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Llesson12/task1/Time;)V" line="106"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getName" desc="()Ljava/lang/String;" line="106"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTime" desc="()Llesson12/task1/Time;" line="106"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="lesson12/task1/Time" sourcefilename="TrainTimeTable.kt"><method name="&lt;init&gt;" desc="(II)V" line="96"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getHour" desc="()I" line="96"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMinute" desc="()I" line="96"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="compareTo" desc="(Llesson12/task1/Time;)I" line="100"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="19" covered="9"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="3" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="lesson12/task1/PhoneBook" sourcefilename="PhoneBook.kt"><method name="&lt;init&gt;" desc="()V" line="20"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addHuman" desc="(Ljava/lang/String;)Z" line="27"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeHuman" desc="(Ljava/lang/String;)Z" line="35"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addPhone" desc="(Ljava/lang/String;Ljava/lang/String;)Z" line="44"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removePhone" desc="(Ljava/lang/String;Ljava/lang/String;)Z" line="52"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="phones" desc="(Ljava/lang/String;)Ljava/util/Set;" line="58"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="humanByPhone" desc="(Ljava/lang/String;)Ljava/lang/String;" line="64"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="71"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="81" covered="16"/><counter type="LINE" missed="6" covered="2"/><counter type="COMPLEXITY" missed="6" covered="2"/><counter type="METHOD" missed="6" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="lesson12/task1/Train" sourcefilename="TrainTimeTable.kt"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/util/List;)V" line="112"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getName" desc="()Ljava/lang/String;" line="112"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getStops" desc="()Ljava/util/List;" line="112"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;[Llesson12/task1/Stop;)V" line="113"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="lesson12/task1/TableFunction" sourcefilename="TableFunction.kt"><method name="&lt;init&gt;" desc="()V" line="16"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSize" desc="()I" line="21"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(DD)Z" line="29"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(D)Z" line="37"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPairs" desc="()Ljava/util/Collection;" line="43"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findPair" desc="(D)Lkotlin/Pair;" line="50"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue" desc="(D)D" line="60"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="66"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="50" covered="23"/><counter type="LINE" missed="5" covered="3"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="5" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="lesson12/task1/OpenHashSet" sourcefilename="OpenHashSet.kt"><method name="&lt;init&gt;" desc="(I)V" line="18"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCapacity" desc="()I" line="18"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getElements$kfirst" desc="()[Ljava/lang/Object;" line="23"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSize" desc="()I" line="28"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEmpty" desc="()Z" line="33"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Ljava/lang/Object;)Z" line="40"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(Ljava/lang/Object;)Z" line="45"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="51"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="23" covered="66"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="3" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="lesson12/task1/SinglyLinkedList" sourcefilename="SinglyLinkedList.kt"><method name="&lt;init&gt;" desc="()V" line="17"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(I)V" line="29"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeFirst" desc="()Z" line="34"><counter type="INSTRUCTION" missed="2" covered="16"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeLast" desc="()Z" line="41"><counter type="INSTRUCTION" missed="8" covered="31"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(I)Z" line="56"><counter type="INSTRUCTION" missed="6" covered="54"/><counter type="BRANCH" missed="3" covered="11"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSize" desc="()I" line="76"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEmpty" desc="()Z" line="86"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="90"><counter type="INSTRUCTION" missed="4" covered="37"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="103"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="113"><counter type="INSTRUCTION" missed="0" covered="63"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="20" covered="259"/><counter type="BRANCH" missed="11" covered="37"/><counter type="LINE" missed="1" covered="58"/><counter type="COMPLEXITY" missed="11" covered="23"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="lesson12/task1/SinglyLinkedList$Node" sourcefilename="SinglyLinkedList.kt"><method name="&lt;init&gt;" desc="(ILlesson12/task1/SinglyLinkedList$Node;)V" line="22"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValue" desc="()I" line="23"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNext" desc="()Llesson12/task1/SinglyLinkedList$Node;" line="24"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setNext" desc="(Llesson12/task1/SinglyLinkedList$Node;)V" line="24"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="lesson12/task1/TrainTimeTable" sourcefilename="TrainTimeTable.kt"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="18"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBaseStationName" desc="()Ljava/lang/String;" line="18"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addTrain" desc="(Ljava/lang/String;Llesson12/task1/Time;Llesson12/task1/Stop;)Z" line="29"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeTrain" desc="(Ljava/lang/String;)Z" line="39"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addStop" desc="(Ljava/lang/String;Llesson12/task1/Stop;)Z" line="59"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeStop" desc="(Ljava/lang/String;Ljava/lang/String;)Z" line="71"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="trains" desc="()Ljava/util/List;" line="76"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="trains" desc="(Llesson12/task1/Time;Ljava/lang/String;)Ljava/util/List;" line="83"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="90"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="84" covered="28"/><counter type="LINE" missed="6" covered="2"/><counter type="COMPLEXITY" missed="7" covered="2"/><counter type="METHOD" missed="7" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="TrainTimeTable.kt"><line nr="18" mi="3" ci="6" mb="0" cb="0"/><line nr="29" mi="0" ci="10" mb="0" cb="0"/><line nr="39" mi="10" ci="0" mb="0" cb="0"/><line nr="59" mi="10" ci="0" mb="0" cb="0"/><line nr="71" mi="10" ci="0" mb="0" cb="0"/><line nr="76" mi="10" ci="0" mb="0" cb="0"/><line nr="83" mi="10" ci="0" mb="0" cb="0"/><line nr="90" mi="10" ci="0" mb="0" cb="0"/><line nr="96" mi="6" ci="9" mb="0" cb="0"/><line nr="100" mi="10" ci="0" mb="0" cb="0"/><line nr="106" mi="6" ci="9" mb="0" cb="0"/><line nr="112" mi="15" ci="0" mb="0" cb="0"/><line nr="113" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="142" covered="52"/><counter type="LINE" missed="9" covered="4"/><counter type="COMPLEXITY" missed="16" covered="4"/><counter type="METHOD" missed="16" covered="4"/><counter type="CLASS" missed="1" covered="3"/></sourcefile><sourcefile name="TableFunction.kt"><line nr="16" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="10" ci="0" mb="0" cb="0"/><line nr="29" mi="0" ci="10" mb="0" cb="0"/><line nr="37" mi="10" ci="0" mb="0" cb="0"/><line nr="43" mi="10" ci="0" mb="0" cb="0"/><line nr="50" mi="10" ci="0" mb="0" cb="0"/><line nr="60" mi="0" ci="10" mb="0" cb="0"/><line nr="66" mi="10" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="50" covered="23"/><counter type="LINE" missed="5" covered="3"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="5" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SinglyLinkedList.kt"><line nr="17" mi="0" ci="3" mb="0" cb="0"/><line nr="22" mi="0" ci="3" mb="0" cb="0"/><line nr="23" mi="0" ci="6" mb="0" cb="0"/><line nr="24" mi="0" ci="10" mb="0" cb="0"/><line nr="29" mi="0" ci="8" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="34" mi="0" ci="5" mb="0" cb="2"/><line nr="35" mi="2" ci="9" mb="1" cb="1"/><line nr="36" mi="0" ci="2" mb="0" cb="0"/><line nr="41" mi="2" ci="7" mb="1" cb="1"/><line nr="42" mi="0" ci="3" mb="1" cb="1"/><line nr="43" mi="4" ci="0" mb="0" cb="0"/><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="2" ci="8" mb="1" cb="3"/><line nr="47" mi="0" ci="6" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="2" ci="7" mb="1" cb="1"/><line nr="57" mi="0" ci="4" mb="0" cb="2"/><line nr="58" mi="0" ci="4" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="2"/><line nr="63" mi="2" ci="13" mb="1" cb="5"/><line nr="64" mi="2" ci="9" mb="1" cb="1"/><line nr="65" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="0" ci="6" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="0" cb="0"/><line nr="78" mi="0" ci="2" mb="0" cb="2"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="7" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="86" mi="0" ci="7" mb="0" cb="2"/><line nr="90" mi="2" ci="3" mb="1" cb="1"/><line nr="91" mi="2" ci="3" mb="1" cb="1"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="4" mb="0" cb="0"/><line nr="94" mi="0" ci="2" mb="0" cb="2"/><line nr="95" mi="0" ci="9" mb="1" cb="3"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="4" mb="0" cb="0"/><line nr="99" mi="0" ci="6" mb="0" cb="2"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="104" mi="0" ci="2" mb="0" cb="0"/><line nr="105" mi="0" ci="2" mb="0" cb="2"/><line nr="106" mi="0" ci="7" mb="0" cb="0"/><line nr="107" mi="0" ci="4" mb="0" cb="0"/><line nr="109" mi="0" ci="2" mb="0" cb="0"/><line nr="113" mi="0" ci="22" mb="0" cb="0"/><line nr="114" mi="0" ci="4" mb="0" cb="0"/><line nr="115" mi="0" ci="3" mb="0" cb="0"/><line nr="116" mi="0" ci="2" mb="1" cb="1"/><line nr="117" mi="0" ci="5" mb="0" cb="0"/><line nr="118" mi="0" ci="2" mb="0" cb="0"/><line nr="119" mi="0" ci="5" mb="0" cb="2"/><line nr="120" mi="0" ci="3" mb="0" cb="0"/><line nr="121" mi="0" ci="4" mb="0" cb="0"/><line nr="122" mi="0" ci="8" mb="0" cb="0"/><line nr="125" mi="0" ci="4" mb="0" cb="0"/><line nr="126" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="20" covered="278"/><counter type="BRANCH" missed="11" covered="37"/><counter type="LINE" missed="1" covered="61"/><counter type="COMPLEXITY" missed="11" covered="27"/><counter type="METHOD" missed="0" covered="14"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="OpenHashSet.kt"><line nr="18" mi="0" ci="9" mb="0" cb="0"/><line nr="23" mi="3" ci="27" mb="0" cb="2"/><line nr="28" mi="0" ci="10" mb="0" cb="0"/><line nr="33" mi="0" ci="10" mb="0" cb="0"/><line nr="40" mi="0" ci="10" mb="0" cb="0"/><line nr="45" mi="10" ci="0" mb="0" cb="0"/><line nr="51" mi="10" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="23" covered="66"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="3" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PhoneBook.kt"><line nr="20" mi="0" ci="3" mb="0" cb="0"/><line nr="27" mi="0" ci="10" mb="0" cb="0"/><line nr="35" mi="10" ci="0" mb="0" cb="0"/><line nr="44" mi="10" ci="0" mb="0" cb="0"/><line nr="52" mi="10" ci="0" mb="0" cb="0"/><line nr="58" mi="10" ci="0" mb="0" cb="0"/><line nr="64" mi="10" ci="0" mb="0" cb="0"/><line nr="71" mi="10" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="81" covered="16"/><counter type="LINE" missed="6" covered="2"/><counter type="COMPLEXITY" missed="6" covered="2"/><counter type="METHOD" missed="6" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="316" covered="435"/><counter type="BRANCH" missed="11" covered="39"/><counter type="LINE" missed="23" covered="75"/><counter type="COMPLEXITY" missed="41" covered="42"/><counter type="METHOD" missed="30" covered="28"/><counter type="CLASS" missed="1" covered="8"/></package><package name="lesson2/task1"><class name="lesson2/task1/IfElseKt" sourcefilename="IfElse.kt"><method name="quadraticRootNumber" desc="(DDD)I" line="22"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="gradeNotation" desc="(I)Ljava/lang/String;" line="35"><counter type="INSTRUCTION" missed="8" covered="9"/><counter type="BRANCH" missed="3" covered="2"/><counter type="LINE" missed="3" covered="4"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="minBiRoot" desc="(DDD)D" line="50"><counter type="INSTRUCTION" missed="0" covered="90"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ageDescription" desc="(I)Ljava/lang/String;" line="74"><counter type="INSTRUCTION" missed="1" covered="80"/><counter type="BRANCH" missed="1" covered="19"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><method name="timeForHalfWay" desc="(DDDDDD)D" line="92"><counter type="INSTRUCTION" missed="11" covered="84"/><counter type="BRANCH" missed="5" covered="9"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="whichRookThreatens" desc="(IIIIII)I" line="119"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="4" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="4" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rookOrBishopThreatens" desc="(IIIIII)I" line="139"><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="triangleKind" desc="(DDD)I" line="155"><counter type="INSTRUCTION" missed="1" covered="93"/><counter type="BRANCH" missed="3" covered="11"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="segmentLength" desc="(IIII)I" line="175"><counter type="INSTRUCTION" missed="8" covered="106"/><counter type="BRANCH" missed="8" covered="40"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="8" covered="17"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="29" covered="564"/><counter type="BRANCH" missed="26" covered="123"/><counter type="LINE" missed="5" covered="57"/><counter type="COMPLEXITY" missed="26" covered="59"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="IfElse.kt"><line nr="22" mi="0" ci="5" mb="0" cb="0"/><line nr="23" mi="0" ci="2" mb="0" cb="0"/><line nr="24" mi="0" ci="6" mb="0" cb="2"/><line nr="25" mi="0" ci="10" mb="0" cb="4"/><line nr="26" mi="0" ci="1" mb="0" cb="0"/><line nr="35" mi="0" ci="4" mb="3" cb="2"/><line nr="36" mi="0" ci="2" mb="0" cb="0"/><line nr="37" mi="2" ci="0" mb="0" cb="0"/><line nr="38" mi="0" ci="2" mb="0" cb="0"/><line nr="39" mi="2" ci="0" mb="0" cb="0"/><line nr="40" mi="4" ci="0" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="0" ci="8" mb="0" cb="4"/><line nr="51" mi="0" ci="10" mb="0" cb="4"/><line nr="52" mi="0" ci="5" mb="0" cb="0"/><line nr="53" mi="0" ci="6" mb="0" cb="2"/><line nr="54" mi="0" ci="6" mb="0" cb="0"/><line nr="57" mi="0" ci="5" mb="0" cb="0"/><line nr="58" mi="0" ci="6" mb="0" cb="2"/><line nr="60" mi="0" ci="13" mb="0" cb="0"/><line nr="61" mi="0" ci="13" mb="0" cb="0"/><line nr="62" mi="0" ci="6" mb="0" cb="0"/><line nr="63" mi="0" ci="6" mb="0" cb="2"/><line nr="64" mi="0" ci="6" mb="0" cb="0"/><line nr="74" mi="0" ci="33" mb="0" cb="12"/><line nr="75" mi="0" ci="14" mb="0" cb="2"/><line nr="76" mi="1" ci="24" mb="1" cb="5"/><line nr="77" mi="0" ci="9" mb="0" cb="0"/><line nr="92" mi="0" ci="15" mb="0" cb="0"/><line nr="93" mi="0" ci="4" mb="0" cb="0"/><line nr="94" mi="0" ci="4" mb="0" cb="0"/><line nr="95" mi="0" ci="4" mb="0" cb="0"/><line nr="96" mi="4" ci="7" mb="2" cb="2"/><line nr="97" mi="6" ci="8" mb="2" cb="2"/><line nr="98" mi="0" ci="8" mb="0" cb="2"/><line nr="99" mi="0" ci="14" mb="0" cb="2"/><line nr="100" mi="0" ci="20" mb="1" cb="1"/><line nr="101" mi="1" ci="0" mb="0" cb="0"/><line nr="119" mi="0" ci="14" mb="2" cb="6"/><line nr="120" mi="0" ci="8" mb="1" cb="3"/><line nr="121" mi="0" ci="8" mb="1" cb="3"/><line nr="122" mi="0" ci="2" mb="0" cb="0"/><line nr="139" mi="0" ci="4" mb="0" cb="0"/><line nr="140" mi="0" ci="4" mb="0" cb="0"/><line nr="141" mi="0" ci="18" mb="1" cb="5"/><line nr="142" mi="0" ci="11" mb="0" cb="2"/><line nr="143" mi="0" ci="8" mb="1" cb="3"/><line nr="144" mi="0" ci="1" mb="0" cb="0"/><line nr="155" mi="0" ci="14" mb="0" cb="0"/><line nr="156" mi="0" ci="14" mb="0" cb="0"/><line nr="157" mi="0" ci="10" mb="0" cb="0"/><line nr="158" mi="0" ci="16" mb="0" cb="0"/><line nr="159" mi="0" ci="9" mb="0" cb="2"/><line nr="160" mi="0" ci="10" mb="0" cb="4"/><line nr="161" mi="0" ci="10" mb="1" cb="3"/><line nr="162" mi="0" ci="10" mb="2" cb="2"/><line nr="163" mi="1" ci="0" mb="0" cb="0"/><line nr="175" mi="1" ci="27" mb="1" cb="11"/><line nr="176" mi="1" ci="27" mb="1" cb="11"/><line nr="177" mi="3" ci="25" mb="3" cb="9"/><line nr="178" mi="3" ci="25" mb="3" cb="9"/><line nr="179" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="29" covered="564"/><counter type="BRANCH" missed="26" covered="123"/><counter type="LINE" missed="5" covered="57"/><counter type="COMPLEXITY" missed="26" covered="59"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="29" covered="564"/><counter type="BRANCH" missed="26" covered="123"/><counter type="LINE" missed="5" covered="57"/><counter type="COMPLEXITY" missed="26" covered="59"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></package><package name="lesson8/task1"><class name="lesson8/task1/Line" sourcefilename="Geometry.kt"><method name="&lt;init&gt;" desc="(DD)V" line="128"><counter type="INSTRUCTION" missed="14" covered="30"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getB" desc="()D" line="128"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAngle" desc="()D" line="128"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Llesson8/task1/Point;D)V" line="133"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="crossPoint" desc="(Llesson8/task1/Line;)Llesson8/task1/Point;" line="141"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="143"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="146"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="151"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="89" covered="71"/><counter type="BRANCH" missed="13" covered="3"/><counter type="LINE" missed="5" covered="6"/><counter type="COMPLEXITY" missed="11" covered="5"/><counter type="METHOD" missed="3" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="lesson8/task1/Hexagon" sourcefilename="Hex.kt"><method name="&lt;init&gt;" desc="(Llesson8/task1/HexPoint;I)V" line="49"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCenter" desc="()Llesson8/task1/HexPoint;" line="49"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRadius" desc="()I" line="49"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="distance" desc="(Llesson8/task1/Hexagon;)I" line="62"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(Llesson8/task1/HexPoint;)Z" line="69"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="38"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="lesson8/task1/HexPoint" sourcefilename="Hex.kt"><method name="&lt;init&gt;" desc="(II)V" line="31"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getX" desc="()I" line="31"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getY" desc="()I" line="31"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="distance" desc="(Llesson8/task1/HexPoint;)I" line="39"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="41"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="19" covered="22"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="lesson8/task1/HexKt" sourcefilename="Hex.kt"><method name="move" desc="(Llesson8/task1/HexPoint;Llesson8/task1/Direction;I)Llesson8/task1/HexPoint;" line="158"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pathBetweenHexes" desc="(Llesson8/task1/HexPoint;Llesson8/task1/HexPoint;)Ljava/util/List;" line="178"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hexagonByThreePoints" desc="(Llesson8/task1/HexPoint;Llesson8/task1/HexPoint;Llesson8/task1/HexPoint;)Llesson8/task1/Hexagon;" line="195"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="minContainingHexagon" desc="([Llesson8/task1/HexPoint;)Llesson8/task1/Hexagon;" line="207"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="64"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="lesson8/task1/Circle" sourcefilename="Geometry.kt"><method name="&lt;init&gt;" desc="(Llesson8/task1/Point;D)V" line="76"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCenter" desc="()Llesson8/task1/Point;" line="76"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRadius" desc="()D" line="76"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="distance" desc="(Llesson8/task1/Circle;)D" line="85"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(Llesson8/task1/Point;)Z" line="92"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="38"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="lesson8/task1/HexSegment" sourcefilename="Hex.kt"><method name="&lt;init&gt;" desc="(Llesson8/task1/HexPoint;Llesson8/task1/HexPoint;)V" line="75"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBegin" desc="()Llesson8/task1/HexPoint;" line="75"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEnd" desc="()Llesson8/task1/HexPoint;" line="75"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValid" desc="()Z" line="84"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="direction" desc="()Llesson8/task1/Direction;" line="93"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="96"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="99"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="49" covered="35"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="9" covered="3"/><counter type="METHOD" missed="4" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="lesson8/task1/Direction" sourcefilename="Hex.kt"><method name="opposite" desc="()Llesson8/task1/Direction;" line="122"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="next" desc="()Llesson8/task1/Direction;" line="134"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isParallel" desc="(Llesson8/task1/Direction;)Z" line="142"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="108"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="78"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="lesson8/task1/Triangle" sourcefilename="Geometry.kt"><method name="&lt;init&gt;" desc="(Ljava/util/Set;)V" line="30"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getA" desc="()Llesson8/task1/Point;" line="35"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getB" desc="()Llesson8/task1/Point;" line="37"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getC" desc="()Llesson8/task1/Point;" line="39"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Llesson8/task1/Point;Llesson8/task1/Point;Llesson8/task1/Point;)V" line="41"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="halfPerimeter" desc="()D" line="46"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="area" desc="()D" line="52"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(Llesson8/task1/Point;)Z" line="60"><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="66"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="68"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="70"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="26" covered="174"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="2" covered="15"/><counter type="COMPLEXITY" missed="3" covered="11"/><counter type="METHOD" missed="2" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="lesson8/task1/Segment" sourcefilename="Geometry.kt"><method name="&lt;init&gt;" desc="(Llesson8/task1/Point;Llesson8/task1/Point;)V" line="98"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBegin" desc="()Llesson8/task1/Point;" line="98"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEnd" desc="()Llesson8/task1/Point;" line="98"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="100"><counter type="INSTRUCTION" missed="1" covered="34"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="103"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="15" covered="49"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="7" covered="3"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="lesson8/task1/Point" sourcefilename="Geometry.kt"><method name="&lt;init&gt;" desc="(DD)V" line="17"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getX" desc="()D" line="17"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getY" desc="()D" line="17"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="distance" desc="(Llesson8/task1/Point;)D" line="23"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="lesson8/task1/GeometryKt" sourcefilename="Geometry.kt"><method name="diameter" desc="([Llesson8/task1/Point;)Llesson8/task1/Segment;" line="112"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="circleByDiameter" desc="(Llesson8/task1/Segment;)Llesson8/task1/Circle;" line="120"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lineBySegment" desc="(Llesson8/task1/Segment;)Llesson8/task1/Line;" line="159"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lineByPoints" desc="(Llesson8/task1/Point;Llesson8/task1/Point;)Llesson8/task1/Line;" line="166"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="bisectorByPoints" desc="(Llesson8/task1/Point;Llesson8/task1/Point;)Llesson8/task1/Line;" line="173"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findNearestCirclePair" desc="([Llesson8/task1/Circle;)Lkotlin/Pair;" line="187"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="circleByThreePoints" desc="(Llesson8/task1/Point;Llesson8/task1/Point;Llesson8/task1/Point;)Llesson8/task1/Circle;" line="198"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="minContainingCircle" desc="([Llesson8/task1/Point;)Llesson8/task1/Circle;" line="211"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="116"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Geometry.kt"><line nr="17" mi="0" ci="15" mb="0" cb="0"/><line nr="23" mi="0" ci="19" mb="0" cb="0"/><line nr="30" mi="0" ci="2" mb="0" cb="0"/><line nr="31" mi="0" ci="4" mb="0" cb="0"/><line nr="33" mi="0" ci="6" mb="0" cb="0"/><line nr="35" mi="0" ci="6" mb="0" cb="0"/><line nr="37" mi="0" ci="6" mb="0" cb="0"/><line nr="39" mi="0" ci="6" mb="0" cb="0"/><line nr="41" mi="0" ci="21" mb="0" cb="0"/><line nr="46" mi="0" ci="20" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="31" mb="0" cb="0"/><line nr="60" mi="0" ci="9" mb="0" cb="0"/><line nr="61" mi="0" ci="9" mb="0" cb="0"/><line nr="62" mi="0" ci="9" mb="0" cb="0"/><line nr="63" mi="0" ci="16" mb="0" cb="2"/><line nr="66" mi="0" ci="14" mb="1" cb="3"/><line nr="68" mi="4" ci="0" mb="0" cb="0"/><line nr="70" mi="22" ci="0" mb="0" cb="0"/><line nr="76" mi="6" ci="9" mb="0" cb="0"/><line nr="85" mi="0" ci="10" mb="0" cb="0"/><line nr="92" mi="0" ci="10" mb="0" cb="0"/><line nr="98" mi="6" ci="9" mb="0" cb="0"/><line nr="100" mi="1" ci="34" mb="4" cb="6"/><line nr="103" mi="8" ci="0" mb="0" cb="0"/><line nr="112" mi="0" ci="10" mb="0" cb="0"/><line nr="120" mi="0" ci="10" mb="0" cb="0"/><line nr="128" mi="0" ci="15" mb="0" cb="0"/><line nr="129" mi="0" ci="1" mb="0" cb="0"/><line nr="130" mi="14" ci="19" mb="3" cb="3"/><line nr="131" mi="0" ci="1" mb="0" cb="0"/><line nr="133" mi="0" ci="19" mb="0" cb="0"/><line nr="141" mi="0" ci="10" mb="0" cb="0"/><line nr="143" mi="29" ci="0" mb="10" cb="0"/><line nr="146" mi="4" ci="0" mb="0" cb="0"/><line nr="147" mi="8" ci="0" mb="0" cb="0"/><line nr="148" mi="2" ci="0" mb="0" cb="0"/><line nr="151" mi="32" ci="0" mb="0" cb="0"/><line nr="159" mi="0" ci="10" mb="0" cb="0"/><line nr="166" mi="0" ci="10" mb="0" cb="0"/><line nr="173" mi="0" ci="10" mb="0" cb="0"/><line nr="187" mi="0" ci="10" mb="0" cb="0"/><line nr="198" mi="0" ci="10" mb="0" cb="0"/><line nr="211" mi="0" ci="10" mb="0" cb="0"/><counter type="INSTRUCTION" missed="136" covered="485"/><counter type="BRANCH" missed="18" covered="14"/><counter type="LINE" missed="8" covered="36"/><counter type="COMPLEXITY" missed="23" covered="34"/><counter type="METHOD" missed="10" covered="31"/><counter type="CLASS" missed="0" covered="6"/></sourcefile><sourcefile name="Hex.kt"><line nr="31" mi="6" ci="9" mb="0" cb="0"/><line nr="39" mi="0" ci="10" mb="0" cb="0"/><line nr="41" mi="13" ci="0" mb="0" cb="0"/><line nr="49" mi="6" ci="9" mb="0" cb="0"/><line nr="62" mi="0" ci="10" mb="0" cb="0"/><line nr="69" mi="0" ci="10" mb="0" cb="0"/><line nr="75" mi="6" ci="9" mb="0" cb="0"/><line nr="84" mi="0" ci="10" mb="0" cb="0"/><line nr="93" mi="0" ci="10" mb="0" cb="0"/><line nr="96" mi="35" ci="0" mb="10" cb="0"/><line nr="99" mi="8" ci="0" mb="0" cb="0"/><line nr="108" mi="0" ci="6" mb="0" cb="0"/><line nr="109" mi="0" ci="6" mb="0" cb="0"/><line nr="110" mi="0" ci="6" mb="0" cb="0"/><line nr="111" mi="0" ci="6" mb="0" cb="0"/><line nr="112" mi="0" ci="6" mb="0" cb="0"/><line nr="113" mi="0" ci="6" mb="0" cb="0"/><line nr="114" mi="0" ci="9" mb="0" cb="0"/><line nr="122" mi="0" ci="10" mb="0" cb="0"/><line nr="134" mi="0" ci="10" mb="0" cb="0"/><line nr="142" mi="0" ci="10" mb="0" cb="0"/><line nr="158" mi="0" ci="10" mb="0" cb="0"/><line nr="178" mi="0" ci="10" mb="0" cb="0"/><line nr="195" mi="0" ci="10" mb="0" cb="0"/><line nr="207" mi="0" ci="10" mb="0" cb="0"/><counter type="INSTRUCTION" missed="74" covered="237"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="3" covered="22"/><counter type="COMPLEXITY" missed="14" covered="16"/><counter type="METHOD" missed="9" covered="16"/><counter type="CLASS" missed="0" covered="5"/></sourcefile><counter type="INSTRUCTION" missed="210" covered="722"/><counter type="BRANCH" missed="28" covered="14"/><counter type="LINE" missed="11" covered="58"/><counter type="COMPLEXITY" missed="37" covered="50"/><counter type="METHOD" missed="19" covered="47"/><counter type="CLASS" missed="0" covered="11"/></package><package name="lesson2/task2"><class name="lesson2/task2/LogicalKt" sourcefilename="Logical.kt"><method name="pointInsideCircle" desc="(DDDDD)Z" line="14"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNumberHappy" desc="(I)Z" line="23"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="queenThreatens" desc="(IIII)Z" line="33"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="daysInMonth" desc="(II)I" line="43"><counter type="INSTRUCTION" missed="6" covered="55"/><counter type="BRANCH" missed="7" covered="21"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="6" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="circleInside" desc="(DDDDDD)Z" line="61"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="brickPasses" desc="(IIIII)Z" line="75"><counter type="INSTRUCTION" missed="0" covered="60"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="207"/><counter type="BRANCH" missed="9" covered="37"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="8" covered="21"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Logical.kt"><line nr="14" mi="0" ci="17" mb="0" cb="2"/><line nr="23" mi="0" ci="25" mb="0" cb="2"/><line nr="33" mi="0" ci="27" mb="1" cb="5"/><line nr="43" mi="0" ci="9" mb="0" cb="4"/><line nr="44" mi="0" ci="12" mb="1" cb="5"/><line nr="45" mi="0" ci="9" mb="1" cb="3"/><line nr="46" mi="6" ci="3" mb="3" cb="1"/><line nr="47" mi="0" ci="20" mb="2" cb="8"/><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="61" mi="0" ci="23" mb="0" cb="4"/><line nr="75" mi="0" ci="14" mb="0" cb="0"/><line nr="76" mi="0" ci="14" mb="0" cb="0"/><line nr="77" mi="0" ci="10" mb="0" cb="0"/><line nr="78" mi="0" ci="6" mb="0" cb="0"/><line nr="79" mi="0" ci="6" mb="0" cb="0"/><line nr="80" mi="0" ci="10" mb="1" cb="3"/><counter type="INSTRUCTION" missed="6" covered="207"/><counter type="BRANCH" missed="9" covered="37"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="8" covered="21"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="6" covered="207"/><counter type="BRANCH" missed="9" covered="37"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="8" covered="21"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></package><package name="lesson8/task3"><class name="lesson8/task3/Graph$Vertex" sourcefilename="Graph.kt"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="6"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getName" desc="()Ljava/lang/String;" line="6"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNeighbors" desc="()Ljava/util/Set;" line="7"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="20"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="lesson8/task3/Graph" sourcefilename="Graph.kt"><method name="&lt;init&gt;" desc="()V" line="5"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(Ljava/lang/String;)Llesson8/task3/Graph$Vertex;" line="12"><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addVertex" desc="(Ljava/lang/String;)V" line="15"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="connect" desc="(Llesson8/task3/Graph$Vertex;Llesson8/task3/Graph$Vertex;)V" line="19"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="connect" desc="(Ljava/lang/String;Ljava/lang/String;)V" line="23"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="bfs" desc="(Ljava/lang/String;Ljava/lang/String;)I" line="33"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="bfs" desc="(Llesson8/task3/Graph$Vertex;Llesson8/task3/Graph$Vertex;)I" line="36"><counter type="INSTRUCTION" missed="0" covered="96"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dfs" desc="(Ljava/lang/String;Ljava/lang/String;)I" line="60"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dfs" desc="(Llesson8/task3/Graph$Vertex;Llesson8/task3/Graph$Vertex;Ljava/util/Set;)Ljava/lang/Integer;" line="63"><counter type="INSTRUCTION" missed="0" covered="59"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="261"/><counter type="BRANCH" missed="1" covered="23"/><counter type="LINE" missed="0" covered="30"/><counter type="COMPLEXITY" missed="1" covered="20"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Graph.kt"><line nr="5" mi="0" ci="3" mb="0" cb="0"/><line nr="6" mi="3" ci="6" mb="0" cb="0"/><line nr="7" mi="0" ci="11" mb="0" cb="0"/><line nr="10" mi="0" ci="8" mb="0" cb="0"/><line nr="12" mi="4" ci="10" mb="1" cb="1"/><line nr="15" mi="0" ci="15" mb="0" cb="0"/><line nr="16" mi="0" ci="1" mb="0" cb="0"/><line nr="19" mi="0" ci="5" mb="0" cb="0"/><line nr="20" mi="0" ci="5" mb="0" cb="0"/><line nr="21" mi="0" ci="1" mb="0" cb="0"/><line nr="23" mi="0" ci="9" mb="0" cb="0"/><line nr="33" mi="0" ci="9" mb="0" cb="0"/><line nr="36" mi="0" ci="4" mb="0" cb="0"/><line nr="37" mi="0" ci="4" mb="0" cb="0"/><line nr="38" mi="0" ci="13" mb="0" cb="0"/><line nr="39" mi="0" ci="12" mb="0" cb="4"/><line nr="40" mi="0" ci="4" mb="0" cb="0"/><line nr="41" mi="0" ci="8" mb="0" cb="0"/><line nr="42" mi="0" ci="6" mb="0" cb="2"/><line nr="43" mi="0" ci="11" mb="0" cb="2"/><line nr="44" mi="0" ci="13" mb="0" cb="2"/><line nr="45" mi="0" ci="14" mb="0" cb="0"/><line nr="46" mi="0" ci="5" mb="0" cb="0"/><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="19" mb="0" cb="2"/><line nr="63" mi="0" ci="7" mb="0" cb="2"/><line nr="65" mi="0" ci="5" mb="0" cb="0"/><line nr="66" mi="0" ci="16" mb="0" cb="4"/><line nr="67" mi="0" ci="19" mb="0" cb="2"/><line nr="68" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="0" ci="9" mb="0" cb="2"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="7" covered="281"/><counter type="BRANCH" missed="1" covered="23"/><counter type="LINE" missed="0" covered="32"/><counter type="COMPLEXITY" missed="2" covered="22"/><counter type="METHOD" missed="1" covered="11"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><counter type="INSTRUCTION" missed="7" covered="281"/><counter type="BRANCH" missed="1" covered="23"/><counter type="LINE" missed="0" covered="32"/><counter type="COMPLEXITY" missed="2" covered="22"/><counter type="METHOD" missed="1" covered="11"/><counter type="CLASS" missed="0" covered="2"/></package><package name="lesson8/task2"><class name="lesson8/task2/ChessKt" sourcefilename="Chess.kt"><method name="square" desc="(Ljava/lang/String;)Llesson8/task2/Square;" line="35"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rookMoveNumber" desc="(Llesson8/task2/Square;Llesson8/task2/Square;)I" line="60"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="rookTrajectory" desc="(Llesson8/task2/Square;Llesson8/task2/Square;)Ljava/util/List;" line="76"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="bishopMoveNumber" desc="(Llesson8/task2/Square;Llesson8/task2/Square;)I" line="101"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="bishopTrajectory" desc="(Llesson8/task2/Square;Llesson8/task2/Square;)Ljava/util/List;" line="121"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="kingMoveNumber" desc="(Llesson8/task2/Square;Llesson8/task2/Square;)I" line="143"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="kingTrajectory" desc="(Llesson8/task2/Square;Llesson8/task2/Square;)Ljava/util/List;" line="159"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="knightMoveNumber" desc="(Llesson8/task2/Square;Llesson8/task2/Square;)I" line="184"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="knightTrajectory" desc="(Llesson8/task2/Square;Llesson8/task2/Square;)Ljava/util/List;" line="206"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="128" covered="13"/><counter type="LINE" missed="8" covered="1"/><counter type="COMPLEXITY" missed="8" covered="1"/><counter type="METHOD" missed="8" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="lesson8/task2/Square" sourcefilename="Chess.kt"><method name="&lt;init&gt;" desc="(II)V" line="10"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getColumn" desc="()I" line="10"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRow" desc="()I" line="10"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="inside" desc="()Z" line="16"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notation" desc="()Ljava/lang/String;" line="25"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="53"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="2" covered="9"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Chess.kt"><line nr="10" mi="6" ci="9" mb="0" cb="0"/><line nr="16" mi="0" ci="34" mb="0" cb="12"/><line nr="25" mi="0" ci="10" mb="0" cb="0"/><line nr="35" mi="0" ci="10" mb="0" cb="0"/><line nr="60" mi="10" ci="0" mb="0" cb="0"/><line nr="76" mi="10" ci="0" mb="0" cb="0"/><line nr="101" mi="10" ci="0" mb="0" cb="0"/><line nr="121" mi="10" ci="0" mb="0" cb="0"/><line nr="143" mi="10" ci="0" mb="0" cb="0"/><line nr="159" mi="10" ci="0" mb="0" cb="0"/><line nr="184" mi="10" ci="0" mb="0" cb="0"/><line nr="206" mi="10" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="134" covered="66"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="8" covered="4"/><counter type="COMPLEXITY" missed="10" covered="10"/><counter type="METHOD" missed="10" covered="4"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><counter type="INSTRUCTION" missed="134" covered="66"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="8" covered="4"/><counter type="COMPLEXITY" missed="10" covered="10"/><counter type="METHOD" missed="10" covered="4"/><counter type="CLASS" missed="0" covered="2"/></package><package name="lesson3/task1"><class name="lesson3/task1/LoopKt" sourcefilename="Loop.kt"><method name="factorial" desc="(I)D" line="21"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isPrime" desc="(I)Z" line="34"><counter type="INSTRUCTION" missed="0" covered="49"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isPerfect" desc="(I)Z" line="49"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="digitCountInNumber" desc="(II)I" line="64"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="digitNumber" desc="(I)I" line="79"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fib" desc="(I)I" line="96"><counter type="INSTRUCTION" missed="1" covered="40"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="minDivisor" desc="(I)I" line="113"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="maxDivisor" desc="(I)I" line="125"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="collatzSteps" desc="(I)I" line="148"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lcm" desc="(II)I" line="165"><counter type="INSTRUCTION" missed="14" covered="53"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isCoPrime" desc="(II)Z" line="181"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="revert" desc="(I)I" line="197"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isPalindrome" desc="(I)Z" line="216"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasDifferentDigits" desc="(I)Z" line="227"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sin" desc="(DD)D" line="246"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cos" desc="(DD)D" line="257"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="squareSequenceDigit" desc="(I)I" line="269"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fibSequenceDigit" desc="(I)I" line="290"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="15" covered="525"/><counter type="BRANCH" missed="7" covered="81"/><counter type="LINE" missed="0" covered="88"/><counter type="COMPLEXITY" missed="7" covered="55"/><counter type="METHOD" missed="0" covered="18"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Loop.kt"><line nr="21" mi="0" ci="2" mb="0" cb="0"/><line nr="22" mi="0" ci="11" mb="0" cb="4"/><line nr="23" mi="0" ci="5" mb="0" cb="0"/><line nr="25" mi="0" ci="2" mb="0" cb="0"/><line nr="34" mi="0" ci="5" mb="0" cb="2"/><line nr="35" mi="0" ci="5" mb="0" cb="2"/><line nr="36" mi="0" ci="6" mb="0" cb="2"/><line nr="37" mi="0" ci="25" mb="0" cb="4"/><line nr="38" mi="0" ci="6" mb="0" cb="2"/><line nr="40" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="15" mb="1" cb="3"/><line nr="51" mi="0" ci="5" mb="0" cb="2"/><line nr="52" mi="0" ci="4" mb="0" cb="0"/><line nr="53" mi="0" ci="4" mb="0" cb="2"/><line nr="55" mi="0" ci="7" mb="0" cb="2"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="5" mb="0" cb="2"/><line nr="66" mi="0" ci="5" mb="0" cb="2"/><line nr="67" mi="0" ci="11" mb="0" cb="0"/><line nr="68" mi="0" ci="1" mb="0" cb="0"/><line nr="79" mi="0" ci="2" mb="0" cb="0"/><line nr="80" mi="0" ci="2" mb="0" cb="0"/><line nr="82" mi="0" ci="6" mb="0" cb="0"/><line nr="83" mi="0" ci="4" mb="0" cb="0"/><line nr="84" mi="0" ci="2" mb="0" cb="2"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="96" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="0" ci="2" mb="0" cb="0"/><line nr="98" mi="1" ci="13" mb="1" cb="5"/><line nr="99" mi="0" ci="11" mb="1" cb="3"/><line nr="100" mi="0" ci="2" mb="0" cb="0"/><line nr="101" mi="0" ci="2" mb="0" cb="0"/><line nr="102" mi="0" ci="4" mb="0" cb="0"/><line nr="104" mi="0" ci="2" mb="0" cb="0"/><line nr="113" mi="0" ci="20" mb="0" cb="4"/><line nr="114" mi="0" ci="6" mb="0" cb="2"/><line nr="116" mi="0" ci="2" mb="0" cb="0"/><line nr="125" mi="0" ci="22" mb="1" cb="3"/><line nr="126" mi="0" ci="6" mb="0" cb="2"/><line nr="128" mi="0" ci="2" mb="0" cb="0"/><line nr="148" mi="0" ci="2" mb="0" cb="0"/><line nr="149" mi="0" ci="2" mb="0" cb="0"/><line nr="150" mi="0" ci="3" mb="0" cb="2"/><line nr="151" mi="0" ci="6" mb="0" cb="0"/><line nr="152" mi="0" ci="9" mb="0" cb="2"/><line nr="153" mi="0" ci="7" mb="0" cb="0"/><line nr="155" mi="0" ci="2" mb="0" cb="0"/><line nr="165" mi="14" ci="39" mb="2" cb="4"/><line nr="166" mi="0" ci="8" mb="0" cb="4"/><line nr="167" mi="0" ci="2" mb="0" cb="0"/><line nr="170" mi="0" ci="4" mb="0" cb="0"/><line nr="181" mi="0" ci="6" mb="0" cb="0"/><line nr="182" mi="0" ci="6" mb="0" cb="0"/><line nr="183" mi="0" ci="11" mb="1" cb="3"/><line nr="184" mi="0" ci="10" mb="0" cb="4"/><line nr="186" mi="0" ci="2" mb="0" cb="0"/><line nr="197" mi="0" ci="2" mb="0" cb="0"/><line nr="198" mi="0" ci="2" mb="0" cb="0"/><line nr="200" mi="0" ci="8" mb="0" cb="0"/><line nr="201" mi="0" ci="4" mb="0" cb="0"/><line nr="202" mi="0" ci="2" mb="0" cb="2"/><line nr="203" mi="0" ci="2" mb="0" cb="0"/><line nr="216" mi="0" ci="8" mb="0" cb="2"/><line nr="227" mi="0" ci="2" mb="0" cb="0"/><line nr="228" mi="0" ci="4" mb="0" cb="0"/><line nr="230" mi="0" ci="7" mb="0" cb="2"/><line nr="231" mi="0" ci="4" mb="0" cb="0"/><line nr="232" mi="0" ci="2" mb="0" cb="2"/><line nr="233" mi="0" ci="2" mb="0" cb="0"/><line nr="246" mi="0" ci="10" mb="0" cb="0"/><line nr="257" mi="0" ci="10" mb="0" cb="0"/><line nr="269" mi="0" ci="2" mb="0" cb="0"/><line nr="270" mi="0" ci="4" mb="0" cb="0"/><line nr="271" mi="0" ci="2" mb="0" cb="0"/><line nr="272" mi="0" ci="3" mb="0" cb="2"/><line nr="273" mi="0" ci="4" mb="0" cb="0"/><line nr="274" mi="0" ci="5" mb="0" cb="0"/><line nr="275" mi="0" ci="7" mb="0" cb="0"/><line nr="277" mi="0" ci="20" mb="0" cb="0"/><line nr="290" mi="0" ci="2" mb="0" cb="0"/><line nr="291" mi="0" ci="3" mb="0" cb="0"/><line nr="292" mi="0" ci="2" mb="0" cb="0"/><line nr="293" mi="0" ci="3" mb="0" cb="2"/><line nr="294" mi="0" ci="3" mb="0" cb="0"/><line nr="295" mi="0" ci="5" mb="0" cb="0"/><line nr="296" mi="0" ci="7" mb="0" cb="0"/><line nr="298" mi="0" ci="20" mb="0" cb="0"/><counter type="INSTRUCTION" missed="15" covered="525"/><counter type="BRANCH" missed="7" covered="81"/><counter type="LINE" missed="0" covered="88"/><counter type="COMPLEXITY" missed="7" covered="55"/><counter type="METHOD" missed="0" covered="18"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="15" covered="525"/><counter type="BRANCH" missed="7" covered="81"/><counter type="LINE" missed="0" covered="88"/><counter type="COMPLEXITY" missed="7" covered="55"/><counter type="METHOD" missed="0" covered="18"/><counter type="CLASS" missed="0" covered="1"/></package><counter type="INSTRUCTION" missed="2000" covered="9942"/><counter type="BRANCH" missed="185" covered="893"/><counter type="LINE" missed="162" covered="1033"/><counter type="COMPLEXITY" missed="300" covered="673"/><counter type="METHOD" missed="149" covered="281"/><counter type="CLASS" missed="9" covered="61"/></report>